<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easylive.mappers.UserVideoSeriesVideoMapper">

    <!--实体映射-->
    <resultMap id="base_result_map" type="com.easylive.entity.po.UserVideoSeriesVideo">
        <!--列表ID-->
        <result column="series_id" property="seriesId"/>
        <!--视频ID-->
        <result column="video_id" property="videoId"/>
        <!--用户ID-->
        <result column="user_id" property="userId"/>
        <!--排序-->
        <result column="sort" property="sort"/>
    </resultMap>


    <!-- 通用查询结果列-->
    <sql id="base_column_list">
        u.series_id,u.video_id,u.user_id,u.sort
    </sql>

    <sql id="base_condition_filed">
        <if test="query.seriesId != null">
            and u.series_id = #{query.seriesId}
        </if>
        <if test="query.videoId != null and query.videoId!=''">
            and u.video_id = #{query.videoId}
        </if>
        <if test="query.userId != null and query.userId!=''">
            and u.user_id = #{query.userId}
        </if>
        <if test="query.sort != null">
            and u.sort = #{query.sort}
        </if>
    </sql>
    <!-- 通用条件列-->
    <sql id="base_condition">
        <where>
            <include refid="base_condition_filed"/>
        </where>
    </sql>

    <!-- 通用查询条件列-->
    <sql id="query_condition">
        <where>
            <include refid="base_condition_filed"/>
            <if test="query.videoIdFuzzy!= null  and query.videoIdFuzzy!=''">
                and u.video_id like concat('%', #{query.videoIdFuzzy}, '%')
            </if>
            <if test="query.userIdFuzzy!= null  and query.userIdFuzzy!=''">
                and u.user_id like concat('%', #{query.userIdFuzzy}, '%')
            </if>
        </where>
    </sql>

    <!-- 查询集合-->
    <select id="selectList" resultMap="base_result_map">
        SELECT
        <include refid="base_column_list"/>
        <if test="query.queryVideoInfo">
            ,v.video_cover,v.video_name,v.play_count,v.create_time
        </if>
        FROM user_video_series_video u
        <if test="query.queryVideoInfo">
            inner join video_info v on v.video_id = u.video_id
        </if>
        <include refid="query_condition"/>
        <if test="query.orderBy!=null">
            order by ${query.orderBy}
        </if>
        <if test="query.simplePage!=null">
            limit #{query.simplePage.start},#{query.simplePage.end}
        </if>
    </select>

    <!-- 查询数量-->
    <select id="selectCount" resultType="java.lang.Integer">
        SELECT count(1) FROM user_video_series_video u
        <include refid="query_condition"/>
    </select>

    <!-- 插入 （匹配有值的字段）-->
    <insert id="insert" parameterType="com.easylive.entity.po.UserVideoSeriesVideo">
        INSERT INTO user_video_series_video
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bean.seriesId != null">
                series_id,
            </if>
            <if test="bean.videoId != null">
                video_id,
            </if>
            <if test="bean.userId != null">
                user_id,
            </if>
            <if test="bean.sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bean.seriesId!=null">
                #{bean.seriesId},
            </if>
            <if test="bean.videoId!=null">
                #{bean.videoId},
            </if>
            <if test="bean.userId!=null">
                #{bean.userId},
            </if>
            <if test="bean.sort!=null">
                #{bean.sort},
            </if>
        </trim>
    </insert>

    <!-- 插入或者更新 （匹配有值的字段）-->
    <insert id="insertOrUpdate" parameterType="com.easylive.entity.po.UserVideoSeriesVideo">
        INSERT INTO user_video_series_video
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bean.seriesId != null">
                series_id,
            </if>
            <if test="bean.videoId != null">
                video_id,
            </if>
            <if test="bean.userId != null">
                user_id,
            </if>
            <if test="bean.sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bean.seriesId!=null">
                #{bean.seriesId},
            </if>
            <if test="bean.videoId!=null">
                #{bean.videoId},
            </if>
            <if test="bean.userId!=null">
                #{bean.userId},
            </if>
            <if test="bean.sort!=null">
                #{bean.sort},
            </if>
        </trim>
        on DUPLICATE key update
        <trim prefix="" suffix="" suffixOverrides=",">
            <if test="bean.seriesId!=null">
                series_id = VALUES(series_id),
            </if>
            <if test="bean.videoId!=null">
                video_id = VALUES(video_id),
            </if>
            <if test="bean.userId!=null">
                user_id = VALUES(user_id),
            </if>
            <if test="bean.sort!=null">
                sort = VALUES(sort),
            </if>
        </trim>
    </insert>

    <!-- 添加 （批量插入）-->
    <insert id="insertBatch" parameterType="com.easylive.entity.po.UserVideoSeriesVideo">
        INSERT INTO user_video_series_video(
        series_id,
        video_id,
        user_id,
        sort
        )values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.seriesId},
            #{item.videoId},
            #{item.userId},
            #{item.sort}
            )
        </foreach>
    </insert>

    <!-- 批量新增修改 （批量插入）-->
    <insert id="insertOrUpdateBatch" parameterType="com.easylive.entity.po.UserVideoSeriesVideo">
        INSERT INTO user_video_series_video(
        series_id,
        video_id,
        user_id,
        sort
        )values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.seriesId},
            #{item.videoId},
            #{item.userId},
            #{item.sort}
            )
        </foreach>
        on DUPLICATE key update
        series_id = VALUES(series_id),
        video_id = VALUES(video_id),
        user_id = VALUES(user_id),
        sort = VALUES(sort)
    </insert>

    <!--多条件修改-->
    <update id="updateByParam" parameterType="com.easylive.entity.query.UserVideoSeriesVideoQuery">
        UPDATE user_video_series_video u
        <set>
            <if test="bean.seriesId != null">
                series_id = #{bean.seriesId},
            </if>
            <if test="bean.videoId != null">
                video_id = #{bean.videoId},
            </if>
            <if test="bean.userId != null">
                user_id = #{bean.userId},
            </if>
            <if test="bean.sort != null">
                sort = #{bean.sort},
            </if>
        </set>
        <include refid="query_condition"/>
    </update>

    <!--多条件删除-->
    <delete id="deleteByParam">
        delete u from user_video_series_video u
        <include refid="query_condition"/>
    </delete>

    <!-- 根据SeriesIdAndVideoId修改-->
    <update id="updateBySeriesIdAndVideoId" parameterType="com.easylive.entity.po.UserVideoSeriesVideo">
        UPDATE user_video_series_video
        <set>
            <if test="bean.userId != null">
                user_id = #{bean.userId},
            </if>
            <if test="bean.sort != null">
                sort = #{bean.sort},
            </if>
        </set>
        where series_id=#{seriesId} and video_id=#{videoId}
    </update>

    <!-- 根据SeriesIdAndVideoId删除-->
    <delete id="deleteBySeriesIdAndVideoId">
        delete from user_video_series_video where series_id=#{seriesId} and video_id=#{videoId}
    </delete>

    <!-- 根据PrimaryKey获取对象-->
    <select id="selectBySeriesIdAndVideoId" resultMap="base_result_map">
        select
        <include refid="base_column_list"/>
        from user_video_series_video u where series_id=#{seriesId} and video_id=#{videoId}
    </select>

    <select id="selectMaxSort" resultType="java.lang.Integer">
        select ifnull(max(sort),0) from user_video_series_video u where series_id=#{seriesId}
    </select>
</mapper>