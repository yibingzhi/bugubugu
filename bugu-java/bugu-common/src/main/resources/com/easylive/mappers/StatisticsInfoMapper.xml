<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easylive.mappers.StatisticsInfoMapper">

    <!--实体映射-->
    <resultMap id="base_result_map" type="com.easylive.entity.po.StatisticsInfo">
        <!--统计日期-->
        <result column="statistics_date" property="statisticsDate"/>
        <!--用户ID-->
        <result column="user_id" property="userId"/>
        <!--数据统计类型-->
        <result column="data_type" property="dataType"/>
        <!--统计数量-->
        <result column="statistics_count" property="statisticsCount"/>
    </resultMap>


    <!-- 通用查询结果列-->
    <sql id="base_column_list">
        s.statistics_date,s.user_id,s.data_type,s.statistics_count
    </sql>

    <sql id="base_condition_filed">
        <if test="query.statisticsDate != null and query.statisticsDate!=''">
            and s.statistics_date = #{query.statisticsDate}
        </if>
        <if test="query.userId != null and query.userId!=''">
            and s.user_id = #{query.userId}
        </if>
        <if test="query.dataType != null">
            and s.data_type = #{query.dataType}
        </if>
        <if test="query.statisticsCount != null">
            and s.statistics_count = #{query.statisticsCount}
        </if>
    </sql>
    <!-- 通用条件列-->
    <sql id="base_condition">
        <where>
            <include refid="base_condition_filed"/>
        </where>
    </sql>

    <!-- 通用查询条件列-->
    <sql id="query_condition">
        <where>
            <include refid="base_condition_filed"/>
            <if test="query.statisticsDateFuzzy!= null  and query.statisticsDateFuzzy!=''">
                and s.statistics_date like concat('%', #{query.statisticsDateFuzzy}, '%')
            </if>
            <if test="query.userIdFuzzy!= null  and query.userIdFuzzy!=''">
                and s.user_id like concat('%', #{query.userIdFuzzy}, '%')
            </if>
            <!--补充查询-->
            <if test="query.statisticsDateStart!=null">
                <![CDATA[ and  s.statistics_date>=#{query.statisticsDateStart} ]]>
            </if>
            <if test="query.statisticsDateEnd!=null">
                <![CDATA[ and  s.statistics_date<=#{query.statisticsDateEnd} ]]>
            </if>
        </where>
    </sql>

    <!-- 查询集合-->
    <select id="selectList" resultMap="base_result_map">
        SELECT
        <include refid="base_column_list"/>
        FROM statistics_info s
        <include refid="query_condition"/>
        <if test="query.orderBy!=null">
            order by ${query.orderBy}
        </if>
        <if test="query.simplePage!=null">
            limit #{query.simplePage.start},#{query.simplePage.end}
        </if>
    </select>

    <!-- 查询数量-->
    <select id="selectCount" resultType="java.lang.Integer">
        SELECT count(1) FROM statistics_info s
        <include refid="query_condition"/>
    </select>

    <!-- 插入 （匹配有值的字段）-->
    <insert id="insert" parameterType="com.easylive.entity.po.StatisticsInfo">
        INSERT INTO statistics_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bean.statisticsDate != null">
                statistics_date,
            </if>
            <if test="bean.userId != null">
                user_id,
            </if>
            <if test="bean.dataType != null">
                data_type,
            </if>
            <if test="bean.statisticsCount != null">
                statistics_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bean.statisticsDate!=null">
                #{bean.statisticsDate},
            </if>
            <if test="bean.userId!=null">
                #{bean.userId},
            </if>
            <if test="bean.dataType!=null">
                #{bean.dataType},
            </if>
            <if test="bean.statisticsCount!=null">
                #{bean.statisticsCount},
            </if>
        </trim>
    </insert>

    <!-- 插入或者更新 （匹配有值的字段）-->
    <insert id="insertOrUpdate" parameterType="com.easylive.entity.po.StatisticsInfo">
        INSERT INTO statistics_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bean.statisticsDate != null">
                statistics_date,
            </if>
            <if test="bean.userId != null">
                user_id,
            </if>
            <if test="bean.dataType != null">
                data_type,
            </if>
            <if test="bean.statisticsCount != null">
                statistics_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bean.statisticsDate!=null">
                #{bean.statisticsDate},
            </if>
            <if test="bean.userId!=null">
                #{bean.userId},
            </if>
            <if test="bean.dataType!=null">
                #{bean.dataType},
            </if>
            <if test="bean.statisticsCount!=null">
                #{bean.statisticsCount},
            </if>
        </trim>
        on DUPLICATE key update
        <trim prefix="" suffix="" suffixOverrides=",">
            <if test="bean.statisticsDate!=null">
                statistics_date = VALUES(statistics_date),
            </if>
            <if test="bean.userId!=null">
                user_id = VALUES(user_id),
            </if>
            <if test="bean.dataType!=null">
                data_type = VALUES(data_type),
            </if>
            <if test="bean.statisticsCount!=null">
                statistics_count = VALUES(statistics_count),
            </if>
        </trim>
    </insert>

    <!-- 添加 （批量插入）-->
    <insert id="insertBatch" parameterType="com.easylive.entity.po.StatisticsInfo">
        INSERT INTO statistics_info(
        statistics_date,
        user_id,
        data_type,
        statistics_count
        )values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.statisticsDate},
            #{item.userId},
            #{item.dataType},
            #{item.statisticsCount}
            )
        </foreach>
    </insert>

    <!-- 批量新增修改 （批量插入）-->
    <insert id="insertOrUpdateBatch" parameterType="com.easylive.entity.po.StatisticsInfo">
        INSERT INTO statistics_info(
        statistics_date,
        user_id,
        data_type,
        statistics_count
        )values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.statisticsDate},
            #{item.userId},
            #{item.dataType},
            #{item.statisticsCount}
            )
        </foreach>
        on DUPLICATE key update
        statistics_date = VALUES(statistics_date),
        user_id = VALUES(user_id),
        data_type = VALUES(data_type),
        statistics_count = VALUES(statistics_count)
    </insert>

    <!--多条件修改-->
    <update id="updateByParam" parameterType="com.easylive.entity.query.StatisticsInfoQuery">
        UPDATE statistics_info s
        <set>
            <if test="bean.statisticsDate != null">
                statistics_date = #{bean.statisticsDate},
            </if>
            <if test="bean.userId != null">
                user_id = #{bean.userId},
            </if>
            <if test="bean.dataType != null">
                data_type = #{bean.dataType},
            </if>
            <if test="bean.statisticsCount != null">
                statistics_count = #{bean.statisticsCount},
            </if>
        </set>
        <include refid="query_condition"/>
    </update>

    <!--多条件删除-->
    <delete id="deleteByParam">
        delete s from statistics_info s
        <include refid="query_condition"/>
    </delete>

    <!-- 根据StatisticsDateAndUserIdAndDataType修改-->
    <update id="updateByStatisticsDateAndUserIdAndDataType" parameterType="com.easylive.entity.po.StatisticsInfo">
        UPDATE statistics_info
        <set>
            <if test="bean.statisticsCount != null">
                statistics_count = #{bean.statisticsCount},
            </if>
        </set>
        where statistics_date=#{statisticsDate} and user_id=#{userId} and data_type=#{dataType}
    </update>

    <!-- 根据StatisticsDateAndUserIdAndDataType删除-->
    <delete id="deleteByStatisticsDateAndUserIdAndDataType">
        delete from statistics_info where statistics_date=#{statisticsDate} and user_id=#{userId} and data_type=#{dataType}
    </delete>

    <!-- 根据PrimaryKey获取对象-->
    <select id="selectByStatisticsDateAndUserIdAndDataType" resultMap="base_result_map">
        select
        <include refid="base_column_list"/>
        from statistics_info s where statistics_date=#{statisticsDate} and user_id=#{userId} and data_type=#{dataType}
    </select>

    <!-- 统计粉丝量 -->
    <select id="selectStatisticsFans" resultMap="base_result_map">
        select focus_user_id userId,count(1) statisticsCount from user_focus
        where
        <![CDATA[  DATE_FORMAT(focus_time,'%Y-%m-%d')=#{statisticsDate} ]]>
        group by focus_user_id
    </select>

    <!--统计评论-->
    <select id="selectStatisticsComment" resultMap="base_result_map">
        select video_user_id user_id ,count(1) statisticsCount from video_comment where
        <![CDATA[  DATE_FORMAT(post_time,'%Y-%m-%d')=#{statisticsDate} ]]>
        group by video_id
    </select>

    <!--统计点赞-->
    <select id="selectStatisticsInfo" resultMap="base_result_map">
        select video_user_id user_id,
        action_type data_type,
        sum(action_count) statistics_count
        from user_action
        where
        <![CDATA[  DATE_FORMAT(action_time,'%Y-%m-%d')=#{statisticsDate} ]]>
        and action_type in(<foreach collection="actionTypeArray" separator="," item="item">#{item}</foreach>)
        group by video_user_id,action_type
    </select>

    <select id="selectTotalCountInfo" resultType="java.util.Map">
        select
        ifnull(sum(play_count),0) playCount,
        ifnull(sum(like_count),0) likeCount,
        ifnull(sum(danmu_count),0) danmuCount,
        ifnull(sum(comment_count),0) commentCount,
        ifnull(sum(coin_count),0) coinCount,
        ifnull(sum(collect_count),0) collectCount
        from video_info
        <where>
            <if test="userId!=null">
                and user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="selectListTotalInfoByParam" resultMap="base_result_map">
        select ifnull(sum(statistics_count),0) statistics_count,statistics_date,data_type from statistics_info s group by data_type,statistics_date
    </select>

    <select id="selectUserCountTotalInfoByParam" resultMap="base_result_map">
        select count(1) statistics_count,DATE_FORMAT(join_time,'%Y-%m-%d') statistics_date from user_info group by statistics_date order by statistics_date asc
    </select>
</mapper>