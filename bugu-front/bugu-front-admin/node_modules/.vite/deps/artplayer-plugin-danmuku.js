import {
  __commonJS
} from "./chunk-PR4QN5HX.js";

// node_modules/artplayer-plugin-danmuku/dist/artplayer-plugin-danmuku.js
var require_artplayer_plugin_danmuku = __commonJS({
  "node_modules/artplayer-plugin-danmuku/dist/artplayer-plugin-danmuku.js"(exports, module) {
    !function(t, e, i, a, n) {
      var o = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : {}, s = "function" == typeof o[a] && o[a], l = s.cache || {}, r = "undefined" != typeof module && "function" == typeof module.require && module.require.bind(module);
      function d(e2, i2) {
        if (!l[e2]) {
          if (!t[e2]) {
            var n2 = "function" == typeof o[a] && o[a];
            if (!i2 && n2) return n2(e2, true);
            if (s) return s(e2, true);
            if (r && "string" == typeof e2) return r(e2);
            var p2 = Error("Cannot find module '" + e2 + "'");
            throw p2.code = "MODULE_NOT_FOUND", p2;
          }
          h.resolve = function(i3) {
            var a2 = t[e2][1][i3];
            return null != a2 ? a2 : i3;
          }, h.cache = {};
          var u2 = l[e2] = new d.Module(e2);
          t[e2][0].call(u2.exports, h, u2, u2.exports, this);
        }
        return l[e2].exports;
        function h(t2) {
          var e3 = h.resolve(t2);
          return false === e3 ? {} : d(e3);
        }
      }
      d.isParcelRequire = true, d.Module = function(t2) {
        this.id = t2, this.bundle = d, this.exports = {};
      }, d.modules = t, d.cache = l, d.parent = s, d.register = function(e2, i2) {
        t[e2] = [function(t2, e3) {
          e3.exports = i2;
        }, {}];
      }, Object.defineProperty(d, "root", { get: function() {
        return o[a];
      } }), o[a] = d;
      for (var p = 0; p < e.length; p++) d(e[p]);
      if (i) {
        var u = d(i);
        "object" == typeof exports && "undefined" != typeof module ? module.exports = u : "function" == typeof define && define.amd && define(function() {
          return u;
        });
      }
    }({ bgm6t: [function(t, e, i) {
      var a = t("@parcel/transformer-js/src/esmodule-helpers.js");
      a.defineInteropFlag(i), a.export(i, "default", () => p);
      var n = t("./danmuku"), o = a.interopDefault(n), s = t("./setting"), l = a.interopDefault(s), r = t("./heatmap"), d = a.interopDefault(r);
      function p(t2) {
        return (e2) => {
          let i2 = new o.default(e2, t2), a2 = new l.default(e2, i2);
          return i2.option.heatmap && (0, d.default)(e2, i2, i2.option.heatmap), { name: "artplayerPluginDanmuku", emit: i2.emit.bind(i2), load: i2.load.bind(i2), config: i2.config.bind(i2), hide: i2.hide.bind(i2), show: i2.show.bind(i2), reset: i2.reset.bind(i2), mount: a2.mount.bind(a2), get option() {
            return i2.option;
          }, get isHide() {
            return i2.isHide;
          }, get isStop() {
            return i2.isStop;
          } };
        };
      }
      p.icons = l.default.icons, "undefined" != typeof window && (window.artplayerPluginDanmuku = p);
    }, { "./danmuku": "4ns48", "./setting": "lO8OT", "./heatmap": "8AxLD", "@parcel/transformer-js/src/esmodule-helpers.js": "9pCYc" }], "4ns48": [function(t, e, i) {
      var a = t("@parcel/transformer-js/src/esmodule-helpers.js");
      a.defineInteropFlag(i);
      var n = t("./bilibili"), o = t("bundle-text:./worker"), s = a.interopDefault(o);
      class l {
        constructor(t2, e2) {
          let { constructor: i2, template: a2 } = t2;
          this.utils = i2.utils, this.validator = i2.validator, this.$danmuku = a2.$danmuku, this.$player = a2.$player, this.art = t2, this.queue = [], this.$refs = [], this.isStop = false, this.isHide = false, this.timer = null, this.index = 0, this.option = l.option, this.states = { wait: [], ready: [], emit: [], stop: [] }, this.config(e2);
          let n2 = new Blob([s.default], { type: "application/javascript" });
          this.worker = new Worker(URL.createObjectURL(n2)), this.start = this.start.bind(this), this.stop = this.stop.bind(this), this.reset = this.reset.bind(this), this.resize = this.resize.bind(this), this.destroy = this.destroy.bind(this), t2.on("video:play", this.start), t2.on("video:playing", this.start), t2.on("video:pause", this.stop), t2.on("video:waiting", this.stop), t2.on("destroy", this.destroy), t2.on("resize", this.resize), this.load();
        }
        static get option() {
          return { danmuku: [], speed: 5, margin: [10, "25%"], opacity: 1, color: "#FFFFFF", mode: 0, modes: [0, 1, 2], fontSize: 25, antiOverlap: true, synchronousPlayback: false, mount: void 0, heatmap: false, width: 512, points: [], filter: () => true, beforeEmit: () => true, beforeVisible: () => true, visible: true, emitter: true, maxLength: 200, lockTime: 5, theme: "dark", OPACITY: {}, FONT_SIZE: {}, MARGIN: {}, SPEED: {}, COLOR: [] };
        }
        static get scheme() {
          return { danmuku: "array|function|string", speed: "number", margin: "array", opacity: "number", color: "string", mode: "number", modes: "array", fontSize: "number|string", antiOverlap: "boolean", synchronousPlayback: "boolean", mount: "?htmldivelement|string", heatmap: "object|boolean", width: "number", points: "array", filter: "function", beforeEmit: "function", beforeVisible: "function", visible: "boolean", emitter: "boolean", maxLength: "number", lockTime: "number", theme: "string", OPACITY: "object", FONT_SIZE: "object", MARGIN: "object", SPEED: "object", COLOR: "array" };
        }
        static get cssText() {
          return ` user-select: none; position: absolute; white-space: pre; pointer-events: none; perspective: 500px; display: inline-block; will-change: transform; font-weight: normal; line-height: 1.125; visibility: hidden; font-family: SimHei, "Microsoft JhengHei", Arial, Helvetica, sans-serif; text-shadow: rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px, rgb(0, 0, 0) -1px 0px 1px; `;
        }
        get isRotate() {
          var _a, _b;
          return (_b = (_a = this.art.plugins) == null ? void 0 : _a.autoOrientation) == null ? void 0 : _b.state;
        }
        get marginTop() {
          let { clamp: t2 } = this.utils, e2 = this.option.margin[0], { clientHeight: i2 } = this.$player;
          return "number" == typeof e2 ? t2(e2, 0, i2) : "string" == typeof e2 && e2.endsWith("%") ? t2(i2 * (parseFloat(e2) / 100), 0, i2) : l.option.margin[0];
        }
        get marginBottom() {
          let { clamp: t2 } = this.utils, e2 = this.option.margin[1], { clientHeight: i2 } = this.$player;
          return "number" == typeof e2 ? t2(e2, 0, i2) : "string" == typeof e2 && e2.endsWith("%") ? t2(i2 * (parseFloat(e2) / 100), 0, i2) : l.option.margin[1];
        }
        get fontSize() {
          let { clamp: t2 } = this.utils, { clientHeight: e2 } = this.$player, i2 = this.option.fontSize;
          return "number" == typeof i2 ? Math.round(t2(i2, 12, e2)) : "string" == typeof i2 && i2.endsWith("%") ? Math.round(t2(e2 * (parseFloat(i2) / 100), 12, e2)) : l.option.fontSize;
        }
        get $ref() {
          let t2 = this.$refs.pop() || document.createElement("div");
          return t2.style.cssText = l.cssText, t2.dataset.mode = "", t2.className = "", t2;
        }
        get readys() {
          let { currentTime: t2 } = this.art, e2 = [];
          return this.filter("ready", (t3) => e2.push(t3)), this.filter("wait", (i2) => {
            t2 + 0.1 >= i2.time && i2.time >= t2 - 0.1 && e2.push(i2);
          }), e2;
        }
        get visibles() {
          let t2 = [], { clientWidth: e2 } = this.$player, i2 = this.getLeft(this.$player);
          return this.filter("emit", (a2) => {
            let n2 = a2.$ref.offsetTop, o2 = this.getLeft(a2.$ref) - i2, s2 = a2.$ref.clientHeight, l2 = a2.$ref.clientWidth, r = o2 + l2, d = r / a2.$restTime, p = {};
            p.top = n2, p.left = o2, p.height = s2, p.width = l2, p.right = e2 - r, p.speed = d, p.distance = r, p.time = a2.$restTime, p.mode = a2.mode, t2.push(p);
          }), t2;
        }
        get speed() {
          return this.option.synchronousPlayback && this.art.playbackRate ? this.option.speed / Number(this.art.playbackRate) : this.option.speed;
        }
        async load(t2) {
          let { errorHandle: e2 } = this.utils, i2 = [], a2 = t2 || this.option.danmuku;
          try {
            "function" == typeof a2 ? i2 = await a2() : a2 instanceof Promise ? i2 = await a2 : "string" == typeof a2 ? i2 = await (0, n.bilibiliDanmuParseFromUrl)(a2) : Array.isArray(a2) && (i2 = a2), e2(Array.isArray(i2), "Danmuku need return an array as result"), void 0 === t2 && (this.reset(), this.queue = [], this.states = { wait: [], ready: [], emit: [], stop: [] }, this.$refs = [], this.$danmuku.innerText = "");
            for (let t3 = 0; t3 < i2.length; t3++) {
              let e3 = i2[t3];
              await this.emit(e3);
            }
            this.art.emit("artplayerPluginDanmuku:loaded", this.queue);
          } catch (t3) {
            throw this.art.emit("artplayerPluginDanmuku:error", t3), t3;
          }
          return this;
        }
        async emit(t2) {
          let { clamp: e2 } = this.utils;
          if (this.validator(t2, { text: "string", mode: "?number", color: "?string", time: "?number", border: "?boolean", style: "?object" }), !t2.text.trim() || (t2.time ? t2.time = e2(t2.time, 0, 1 / 0) : t2.time = this.art.currentTime + 0.5, void 0 === t2.mode && (t2.mode = this.option.mode), void 0 === t2.style && (t2.style = {}), void 0 === t2.color && (t2.color = this.option.color), ![0, 1, 2].includes(t2.mode) || !this.option.filter(t2))) return this;
          let i2 = { ...t2, $state: "wait", $id: this.index++, $ref: null, $restTime: 0, $lastStartTime: 0 };
          return this.setState(i2, "wait"), this.queue.push(i2), this;
        }
        config(t2) {
          let { clamp: e2 } = this.utils, { $controlsCenter: i2 } = this.art.template;
          return Object.keys(t2).some((e3) => JSON.stringify(this.option[e3]) !== JSON.stringify(t2[e3])) && (this.option = Object.assign({}, l.option, this.option, t2), this.validator(this.option, l.scheme), this.option.mode = e2(this.option.mode, 0, 2), this.option.speed = e2(this.option.speed, 1, 10), this.option.opacity = e2(this.option.opacity, 0, 1), this.option.lockTime = e2(this.option.lockTime, 1, 60), this.option.maxLength = e2(this.option.maxLength, 1, 1e3), this.option.mount = this.option.mount || i2, t2.fontSize && this.reset(), this.option.visible ? this.show() : this.hide(), this.art.emit("artplayerPluginDanmuku:config", this.option)), this;
        }
        getLeft(t2) {
          let e2 = t2.getBoundingClientRect();
          return this.isRotate ? e2.top : e2.left;
        }
        postMessage(t2 = {}) {
          return new Promise((e2) => {
            t2.id = Date.now(), this.worker.postMessage(t2), this.worker.onmessage = (i2) => {
              let { data: a2 } = i2;
              a2.id === t2.id && e2(a2);
            };
          });
        }
        filter(t2, e2) {
          let i2 = this.states[t2] || [];
          for (let t3 = 0; t3 < i2.length; t3++) e2(i2[t3]);
          return i2;
        }
        setState(t2, e2) {
          this.states[t2.$state] = this.states[t2.$state].filter((e3) => e3 !== t2), t2.$state = e2, t2.$ref && (t2.$ref.dataset.state = e2), this.states[e2].push(t2);
        }
        makeWait(t2) {
          this.setState(t2, "wait"), t2.$ref && (t2.$ref.style.cssText = l.cssText, t2.$ref.style.visibility = "hidden", t2.$ref.style.marginLeft = "0px", t2.$ref.style.transform = "translateX(0px)", t2.$ref.style.transition = "transform 0s linear 0s", this.$refs.push(t2.$ref), t2.$ref = null);
        }
        update() {
          let { setStyles: t2 } = this.utils;
          return this.timer = window.requestAnimationFrame(async () => {
            if (this.art.playing && !this.isHide) {
              this.filter("emit", (t3) => {
                let e3 = (Date.now() - t3.$lastStartTime) / 1e3;
                t3.$restTime -= e3, t3.$lastStartTime = Date.now(), t3.$restTime <= 0 && this.makeWait(t3);
              });
              let e2 = this.readys;
              for (let i2 = 0; i2 < e2.length; i2++) {
                let a2 = e2[i2];
                if (await this.option.beforeVisible(a2)) {
                  let { clientWidth: e3, clientHeight: i3 } = this.$player;
                  a2.$ref = this.$ref, a2.$ref.innerText = a2.text, this.$danmuku.appendChild(a2.$ref), a2.$ref.style.opacity = this.option.opacity, a2.$ref.style.fontSize = `${this.fontSize}px`, a2.$ref.style.color = a2.color, a2.$ref.style.border = a2.border ? `1px solid ${a2.color}` : null, a2.$ref.style.backgroundColor = a2.border ? "rgb(0 0 0 / 50%)" : null, t2(a2.$ref, a2.style), a2.$lastStartTime = Date.now(), a2.$restTime = this.speed;
                  let n2 = e3 + a2.$ref.clientWidth, { result: o2 } = await this.postMessage({ type: "getDanmuTop", target: { mode: a2.mode, height: a2.$ref.clientHeight, speed: n2 / a2.$restTime }, visibles: this.visibles, antiOverlap: this.option.antiOverlap, clientWidth: e3, clientHeight: i3, marginBottom: this.marginBottom, marginTop: this.marginTop });
                  if (a2.$ref) {
                    if (this.isStop || void 0 === o2) this.setState(a2, "ready"), this.$refs.push(a2.$ref), a2.$ref = null;
                    else {
                      switch (this.setState(a2, "emit"), a2.$ref.style.top = `${o2}px`, a2.$ref.style.visibility = "visible", a2.$ref.dataset.mode = a2.mode, a2.mode) {
                        case 0:
                          a2.$ref.style.left = `${e3}px`, a2.$ref.style.marginLeft = "0px", a2.$ref.style.transform = `translateX(${-n2}px)`, a2.$ref.style.transition = `transform ${a2.$restTime}s linear 0s`;
                          break;
                        case 1:
                        case 2:
                          a2.$ref.style.left = "50%", a2.$ref.style.marginLeft = `-${a2.$ref.clientWidth / 2}px`;
                      }
                      this.art.emit("artplayerPluginDanmuku:visible", a2);
                    }
                  }
                }
              }
            }
            this.isStop || this.update();
          }), this;
        }
        resize() {
          let { clientWidth: t2 } = this.$player;
          this.filter("stop", (e2) => {
            0 === e2.mode && (e2.$ref.style.left = `${t2}px`);
          }), this.filter("emit", (e2) => {
            if (e2.$lastStartTime = Date.now(), 0 === e2.mode) {
              let i2 = t2 + e2.$ref.clientWidth;
              e2.$ref.style.left = `${t2}px`, e2.$ref.style.transform = `translateX(${-i2}px)`, e2.$ref.style.transition = `transform ${e2.$restTime}s linear 0s`;
            }
          });
        }
        continue() {
          let { clientWidth: t2 } = this.$player;
          return this.filter("stop", (e2) => {
            if (this.setState(e2, "emit"), e2.$lastStartTime = Date.now(), 0 === e2.mode) {
              let i2 = t2 + e2.$ref.clientWidth;
              e2.$ref.style.transform = `translateX(${-i2}px)`, e2.$ref.style.transition = `transform ${e2.$restTime}s linear 0s`;
            }
          }), this;
        }
        suspend() {
          let { clientWidth: t2 } = this.$player;
          return this.filter("emit", (e2) => {
            if (this.setState(e2, "stop"), 0 === e2.mode) {
              let i2 = t2 - (this.getLeft(e2.$ref) - this.getLeft(this.$player));
              e2.$ref.style.transform = `translateX(${-i2}px)`, e2.$ref.style.transition = "transform 0s linear 0s";
            }
          }), this;
        }
        stop() {
          return this.isStop = true, this.suspend(), window.cancelAnimationFrame(this.timer), this.art.emit("artplayerPluginDanmuku:stop"), this;
        }
        start() {
          return this.isStop = false, this.continue(), this.update(), this.art.emit("artplayerPluginDanmuku:start"), this;
        }
        reset() {
          return this.queue.forEach((t2) => this.makeWait(t2)), this.art.emit("artplayerPluginDanmuku:reset"), this;
        }
        show() {
          return this.isHide = false, this.$danmuku.style.opacity = 1, this.option.visible = true, this.art.emit("artplayerPluginDanmuku:show"), this;
        }
        hide() {
          return this.isHide = true, this.$danmuku.style.opacity = 0, this.option.visible = false, this.art.emit("artplayerPluginDanmuku:hide"), this;
        }
        destroy() {
          this.stop(), this.worker.terminate(), this.art.off("video:play", this.start), this.art.off("video:playing", this.start), this.art.off("video:pause", this.stop), this.art.off("video:waiting", this.stop), this.art.off("resize", this.reset), this.art.off("destroy", this.destroy), this.art.emit("artplayerPluginDanmuku:destroy");
        }
      }
      i.default = l;
    }, { "./bilibili": "f83sx", "bundle-text:./worker": "lfIAi", "@parcel/transformer-js/src/esmodule-helpers.js": "9pCYc" }], f83sx: [function(t, e, i) {
      var a = t("@parcel/transformer-js/src/esmodule-helpers.js");
      function n(t2) {
        switch (t2) {
          case 1:
          case 2:
          case 3:
          default:
            return 0;
          case 4:
            return 2;
          case 5:
            return 1;
        }
      }
      function o(t2) {
        if ("string" != typeof t2) return [];
        let e2 = new RegExp(/<d (?:.*? )??p="(?<p>.+?)"(?: .*?)?>(?<text>.+?)<\/d>/gs);
        return Array.from(t2.matchAll(e2)).map((t3) => {
          let e3 = t3.groups.p.split(",");
          return e3.length >= 8 ? { text: t3.groups.text.trim().replaceAll("&quot;", '"').replaceAll("&apos;", "'").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&amp;", "&"), time: Number(e3[0]), mode: n(Number(e3[1])), fontSize: Number(e3[2]), color: `#${Number(e3[3]).toString(16)}`, timestamp: Number(e3[4]), pool: Number(e3[5]), userID: e3[6], rowID: Number(e3[7]) } : null;
        }).filter(Boolean);
      }
      function s({ data: t2 }) {
        let { xml: e2, id: i2 } = t2;
        if (!i2 || !e2) return;
        let a2 = o(e2);
        self.postMessage({ danmus: a2, id: i2 });
      }
      function l(t2) {
        return new Promise(async (e2) => {
          let i2 = await fetch(t2), a2 = await i2.text();
          try {
            let t3 = function() {
              let t4 = new Blob([` ${n.toString()} ${o.toString()} onmessage = ${s.toString()} `], { type: "application/javascript" });
              return new Worker(URL.createObjectURL(t4));
            }();
            t3.onmessage = (i3) => {
              let { danmus: a3, id: n2 } = i3.data;
              n2 && a3 && (e2(a3), t3.terminate());
            }, t3.postMessage({ xml: a2, id: Date.now() });
          } catch (t3) {
            e2(o(a2));
          }
        });
      }
      a.defineInteropFlag(i), a.export(i, "bilibiliDanmuParseFromUrl", () => l);
    }, { "@parcel/transformer-js/src/esmodule-helpers.js": "9pCYc" }], "9pCYc": [function(t, e, i) {
      i.interopDefault = function(t2) {
        return t2 && t2.__esModule ? t2 : { default: t2 };
      }, i.defineInteropFlag = function(t2) {
        Object.defineProperty(t2, "__esModule", { value: true });
      }, i.exportAll = function(t2, e2) {
        return Object.keys(t2).forEach(function(i2) {
          "default" === i2 || "__esModule" === i2 || Object.prototype.hasOwnProperty.call(e2, i2) || Object.defineProperty(e2, i2, { enumerable: true, get: function() {
            return t2[i2];
          } });
        }), e2;
      }, i.export = function(t2, e2, i2) {
        Object.defineProperty(t2, e2, { enumerable: true, get: i2 });
      };
    }, {}], lfIAi: [function(t, e, i) {
      e.exports = `!function(e,t,n,o,i){var r="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},f="function"==typeof r[o]&&r[o],l=f.cache||{},d="undefined"!=typeof module&&"function"==typeof module.require&&module.require.bind(module);function u(t,n){if(!l[t]){if(!e[t]){var i="function"==typeof r[o]&&r[o];if(!n&&i)return i(t,!0);if(f)return f(t,!0);if(d&&"string"==typeof t)return d(t);var h=Error("Cannot find module '"+t+"'");throw h.code="MODULE_NOT_FOUND",h}s.resolve=function(n){var o=e[t][1][n];return null!=o?o:n},s.cache={};var p=l[t]=new u.Module(t);e[t][0].call(p.exports,s,p,p.exports,this)}return l[t].exports;function s(e){var t=s.resolve(e);return!1===t?{}:u(t)}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=l,u.parent=f,u.register=function(t,n){e[t]=[function(e,t){t.exports=n},{}]},Object.defineProperty(u,"root",{get:function(){return r[o]}}),r[o]=u;for(var h=0;h<t.length;h++)u(t[h]);if(n){var p=u(n);"object"==typeof exports&&"undefined"!=typeof module?module.exports=p:"function"==typeof define&&define.amd&&define(function(){return p})}}({"59OZS":[function(e,t,n){function o({target:e,visibles:t,clientWidth:n,clientHeight:o,marginBottom:i,marginTop:r,antiOverlap:f}){let l=o-i,d=t.filter(t=>t.mode===e.mode&&t.top<=l).sort((e,t)=>e.top-t.top);if(0===d.length)return 2===e.mode?l-e.height:r;if(d.unshift({type:"top",top:0,left:0,right:0,height:r,width:n,speed:0,distance:n}),d.push({type:"bottom",top:l,left:0,right:0,height:i,width:n,speed:0,distance:n}),2===e.mode)for(let t=d.length-2;t>=0;t-=1){let n=d[t],o=d[t+1],i=n.top+n.height;if(o.top-i>=e.height)return o.top-e.height}else for(let t=1;t<d.length;t+=1){let n=d[t],o=d[t-1],i=o.top+o.height;if(n.top-i>=e.height)return i}let u=[];for(let e=1;e<d.length-1;e+=1){let t=d[e];if(u.length){let e=u[u.length-1];e[0].top===t.top?e.push(t):u.push([t])}else u.push([t])}if(f)switch(e.mode){case 0:{let t=u.find(t=>t.every(t=>!(n<t.distance)&&(e.speed<t.speed||t.right/(e.speed-t.speed)>t.time)));return t&&t[0]?t[0].top:void 0}case 1:case 2:return}else{switch(e.mode){case 0:u.sort((e,t)=>{let n=Math.min(...t.map(e=>e.right)),o=Math.min(...e.map(e=>e.right));return n*t.length-o*e.length});break;case 1:case 2:u.sort((e,t)=>{let n=Math.max(...t.map(e=>e.width));return Math.max(...e.map(e=>e.width))*e.length-n*t.length})}return u[0][0].top}}onmessage=e=>{let{data:t}=e;if(!t.id||!t.type)return;let n=(0,({getDanmuTop:o})[t.type])(t);self.postMessage({result:n,id:t.id})}},{}]},["59OZS"],"59OZS","parcelRequire4dc0");`;
    }, {}], lO8OT: [function(t, e, i) {
      var a = t("@parcel/transformer-js/src/esmodule-helpers.js");
      a.defineInteropFlag(i);
      var n = t("bundle-text:./style.less"), o = a.interopDefault(n), s = t("bundle-text:./img/on.svg"), l = a.interopDefault(s), r = t("bundle-text:./img/off.svg"), d = a.interopDefault(r), p = t("bundle-text:./img/config.svg"), u = a.interopDefault(p), h = t("bundle-text:./img/style.svg"), m = a.interopDefault(h), c = t("bundle-text:./img/mode_0_off.svg"), f = a.interopDefault(c), g = t("bundle-text:./img/mode_0_on.svg"), y = a.interopDefault(g), v = t("bundle-text:./img/mode_1_off.svg"), x = a.interopDefault(v), k = t("bundle-text:./img/mode_1_on.svg"), b = a.interopDefault(k), $ = t("bundle-text:./img/mode_2_off.svg"), w = a.interopDefault($), M = t("bundle-text:./img/mode_2_on.svg"), E = a.interopDefault(M), S = t("bundle-text:./img/check_on.svg"), D = a.interopDefault(S), z = t("bundle-text:./img/check_off.svg"), A = a.interopDefault(z);
      if (i.default = class {
        constructor(t2, e2) {
          this.art = t2, this.danmuku = e2, this.utils = t2.constructor.utils;
          let { setStyle: i2 } = this.utils, { $controlsCenter: a2 } = t2.template;
          i2(a2, "display", "flex"), this.template = { $controlsCenter: a2, $mount: a2, $danmuku: null, $toggle: null, $config: null, $configPanel: null, $configModes: null, $style: null, $stylePanel: null, $styleModes: null, $colors: null, $opacitySlider: null, $opacityValue: null, $marginSlider: null, $marginValue: null, $fontSizeSlider: null, $fontSizeValue: null, $speedSlider: null, $speedValue: null, $input: null, $send: null }, this.slider = { opacity: null, margin: null, fontSize: null, speed: null }, this.emitting = false, this.isLock = false, this.timer = null, this.createTemplate(), this.createSliders(), this.createEvents(), this.mount(this.option.mount), t2.on("resize", () => this.resize()), t2.on("fullscreen", (t3) => this.onFullscreen(t3)), t2.on("fullscreenWeb", (t3) => this.onFullscreen(t3)), t2.proxy(this.template.$config, "mouseenter", () => {
            this.onMouseEnter({ $control: this.template.$config, $panel: this.template.$configPanel });
          }), t2.proxy(this.template.$style, "mouseenter", () => {
            this.onMouseEnter({ $control: this.template.$style, $panel: this.template.$stylePanel });
          });
        }
        static get icons() {
          return { $on: l.default, $off: d.default, $config: u.default, $style: m.default, $mode_0_off: f.default, $mode_0_on: y.default, $mode_1_off: x.default, $mode_1_on: b.default, $mode_2_off: w.default, $mode_2_on: E.default, $check_on: D.default, $check_off: A.default };
        }
        get option() {
          return this.danmuku.option;
        }
        get outside() {
          return this.template.$mount !== this.template.$controlsCenter;
        }
        get TEMPLATE() {
          let { option: t2 } = this;
          return `<div class="apd-toggle">${l.default}${d.default}</div><div class="apd-config">${u.default}<div class="apd-config-panel"><div class="apd-config-panel-inner"><div class="apd-config-mode">按类型屏蔽<div class="apd-modes"><div data-mode="0" class="apd-mode">${f.default}${y.default}<div>滚动</div></div><div data-mode="1" class="apd-mode">${x.default}${b.default}<div>顶部</div></div><div data-mode="2" class="apd-mode">${w.default}${E.default}<div>底部</div></div></div></div><div class="apd-config-other"><div class="apd-other apd-anti-overlap">${D.default}${A.default} 防止弹幕重叠</div><div class="apd-other apd-sync-video">${D.default}${A.default} 同步视频速度</div></div><div class="apd-config-slider apd-config-opacity">不透明度<div class="apd-slider"></div><div class="apd-value">未知</div></div><div class="apd-config-slider apd-config-margin">显示区域<div class="apd-slider"></div><div class="apd-value">未知</div></div><div class="apd-config-slider apd-config-fontSize">弹幕字号<div class="apd-slider"></div><div class="apd-value">未知</div></div><div class="apd-config-slider apd-config-speed">弹幕速度<div class="apd-slider"></div><div class="apd-value">未知</div></div></div></div></div><div class="apd-emitter"><div class="apd-style">${m.default}<div class="apd-style-panel"><div class="apd-style-panel-inner"><div class="apd-style-mode">模式<div class="apd-modes"><div data-mode="0" class="apd-mode">${y.default}<div>滚动</div></div><div data-mode="1" class="apd-mode">${b.default}<div>顶部</div></div><div data-mode="2" class="apd-mode">${E.default}<div>底部</div></div></div></div><div class="apd-style-color">颜色<div class="apd-colors">${this.COLOR.map((t3) => `<div data-color="${t3}" class="apd-color" style="background-color: ${t3}"></div>`).join("")}</div></div></div></div></div><input class="apd-input" placeholder="发个友善的弹幕见证当下" autocomplete="off" maxLength="${t2.maxLength}" /><div class="apd-send">发送</div></div>`;
        }
        get OPACITY() {
          return { min: 0, max: 100, steps: [], ...this.option.OPACITY };
        }
        get FONT_SIZE() {
          return { min: 12, max: 120, steps: [], ...this.option.FONT_SIZE };
        }
        get MARGIN() {
          return { min: 0, max: 3, steps: [{ name: "1/4", value: [10, "75%"] }, { name: "半屏", value: [10, "50%"] }, { name: "3/4", value: [10, "25%"] }, { name: "满屏", value: [10, 10] }], ...this.option.MARGIN };
        }
        get SPEED() {
          return { min: 0, max: 4, steps: [{ name: "极慢", value: 10 }, { name: "较慢", value: 7.5, hide: true }, { name: "适中", value: 5 }, { name: "较快", value: 2.5, hide: true }, { name: "极快", value: 1 }], ...this.option.SPEED };
        }
        get COLOR() {
          return this.option.COLOR.length ? this.option.COLOR : ["#FE0302", "#FF7204", "#FFAA02", "#FFD302", "#FFFF00", "#A0EE00", "#00CD00", "#019899", "#4266BE", "#89D5FF", "#CC0273", "#222222", "#9B9B9B", "#FFFFFF"];
        }
        query(t2) {
          let { query: e2 } = this.utils, { $danmuku: i2 } = this.template;
          return e2(t2, i2);
        }
        append(t2, e2) {
          let { append: i2 } = this.utils;
          [...t2.children].some((t3) => t3 === e2) || i2(t2, e2);
        }
        setData(t2, e2) {
          let { $player: i2 } = this.art.template, { $mount: a2 } = this.template;
          i2.dataset[t2] = e2, this.outside && (a2.dataset[t2] = e2);
        }
        createTemplate() {
          let { createElement: t2, tooltip: e2 } = this.utils, i2 = t2("div");
          i2.className = "artplayer-plugin-danmuku", i2.innerHTML = this.TEMPLATE, this.template.$danmuku = i2, this.template.$toggle = this.query(".apd-toggle"), this.template.$config = this.query(".apd-config"), this.template.$configPanel = this.query(".apd-config-panel"), this.template.$configModes = this.query(".apd-config-mode .apd-modes"), this.template.$style = this.query(".apd-style"), this.template.$stylePanel = this.query(".apd-style-panel"), this.template.$styleModes = this.query(".apd-style-mode .apd-modes"), this.template.$colors = this.query(".apd-colors"), this.template.$antiOverlap = this.query(".apd-anti-overlap"), this.template.$syncVideo = this.query(".apd-sync-video"), this.template.$opacitySlider = this.query(".apd-config-opacity .apd-slider"), this.template.$opacityValue = this.query(".apd-config-opacity .apd-value"), this.template.$marginSlider = this.query(".apd-config-margin .apd-slider"), this.template.$marginValue = this.query(".apd-config-margin .apd-value"), this.template.$fontSizeSlider = this.query(".apd-config-fontSize .apd-slider"), this.template.$fontSizeValue = this.query(".apd-config-fontSize .apd-value"), this.template.$speedSlider = this.query(".apd-config-speed .apd-slider"), this.template.$speedValue = this.query(".apd-config-speed .apd-value"), this.template.$input = this.query(".apd-input"), this.template.$send = this.query(".apd-send");
          let { $toggle: a2 } = this.template;
          this.art.on("artplayerPluginDanmuku:show", () => {
            e2(a2, "关闭弹幕");
          }), this.art.on("artplayerPluginDanmuku:hide", () => {
            e2(a2, "打开弹幕");
          });
        }
        createEvents() {
          let { $toggle: t2, $configModes: e2, $styleModes: i2, $colors: a2, $antiOverlap: n2, $syncVideo: o2, $send: s2, $input: l2 } = this.template;
          this.art.proxy(t2, "click", () => {
            this.danmuku.config({ visible: !this.option.visible }), this.reset();
          }), this.art.proxy(e2, "click", (t3) => {
            let e3 = t3.target.closest(".apd-mode");
            if (!e3) return;
            let i3 = Number(e3.dataset.mode);
            this.option.modes.includes(i3) ? this.danmuku.config({ modes: this.option.modes.filter((t4) => t4 !== i3) }) : this.danmuku.config({ modes: [...this.option.modes, i3] }), this.reset();
          }), this.art.proxy(n2, "click", () => {
            this.danmuku.config({ antiOverlap: !this.option.antiOverlap }), this.reset();
          }), this.art.proxy(o2, "click", () => {
            this.danmuku.config({ synchronousPlayback: !this.option.synchronousPlayback }), this.reset();
          }), this.art.proxy(i2, "click", (t3) => {
            let e3 = t3.target.closest(".apd-mode");
            if (!e3) return;
            let i3 = Number(e3.dataset.mode);
            this.danmuku.config({ mode: i3 }), this.reset();
          }), this.art.proxy(a2, "click", (t3) => {
            let e3 = t3.target.closest(".apd-color");
            e3 && (this.danmuku.config({ color: e3.dataset.color }), this.reset());
          }), this.art.proxy(s2, "click", () => this.emit()), this.art.proxy(l2, "keypress", (t3) => {
            "Enter" === t3.key && (t3.preventDefault(), this.emit());
          });
        }
        createSliders() {
          this.slider.opacity = this.createSlider({ ...this.OPACITY, container: this.template.$opacitySlider, findIndex: () => Math.round(100 * this.option.opacity), onChange: (t2) => {
            let { $opacityValue: e2 } = this.template;
            e2.textContent = `${t2}%`, this.danmuku.config({ opacity: t2 / 100 });
          } }), this.slider.margin = this.createSlider({ ...this.MARGIN, container: this.template.$marginSlider, findIndex: () => this.MARGIN.steps.findIndex((t2) => t2.value[0] === this.option.margin[0] && t2.value[1] === this.option.margin[1]), onChange: (t2) => {
            let e2 = this.MARGIN.steps[t2];
            if (!e2) return;
            let { $marginValue: i2 } = this.template;
            i2.textContent = e2.name, this.danmuku.config({ margin: e2.value });
          } }), this.slider.fontSize = this.createSlider({ ...this.FONT_SIZE, container: this.template.$fontSizeSlider, findIndex: () => this.danmuku.fontSize, onChange: (t2) => {
            let { $fontSizeValue: e2 } = this.template;
            e2.textContent = `${t2}px`, t2 !== this.danmuku.fontSize && this.danmuku.config({ fontSize: t2 });
          } }), this.slider.speed = this.createSlider({ ...this.SPEED, container: this.template.$speedSlider, findIndex: () => this.SPEED.steps.findIndex((t2) => t2.value === this.option.speed), onChange: (t2) => {
            let e2 = this.SPEED.steps[t2];
            if (!e2) return;
            let { $speedValue: i2 } = this.template;
            i2.textContent = e2.name, this.danmuku.config({ speed: e2.value });
          } });
        }
        createSlider({ min: t2, max: e2, container: i2, findIndex: a2, onChange: n2, steps: o2 = [] }) {
          let { query: s2, clamp: l2, setStyle: r2 } = this.utils;
          r2(i2, "touch-action", "none"), i2.innerHTML = `<div class="apd-slider-line"><div class="apd-slider-points">${o2.map(() => '<div class="apd-slider-point"></div>').join("")}</div><div class="apd-slider-progress"></div></div><div class="apd-slider-dot"></div><div class="apd-slider-steps">${o2.map((t3) => t3.hide ? "" : `<div class="apd-slider-step">${t3.name}</div>`).join("")}</div>`;
          let d2 = s2(".apd-slider-dot", i2), p2 = s2(".apd-slider-progress", i2), u2 = false;
          function h2(i3 = a2()) {
            if (i3 < t2 || i3 > e2) return;
            let s3 = (i3 - t2) / (e2 - t2);
            d2.style.left = `${100 * s3}%`, 0 === o2.length && (p2.style.width = d2.style.left), n2(i3);
          }
          function m2(a3) {
            let { top: n3, height: o3, left: s3, width: r3 } = i2.getBoundingClientRect();
            this.art.isRotate ? h2(Math.round(l2(a3.clientY - n3, 0, o3) / o3 * (e2 - t2) + t2)) : h2(Math.round(l2(a3.clientX - s3, 0, r3) / r3 * (e2 - t2) + t2));
          }
          return this.art.proxy(i2, "click", (t3) => {
            m2.call(this, t3);
          }), this.art.proxy(i2, "pointerdown", (t3) => {
            u2 = 0 === t3.button;
          }), this.art.proxy(document, "pointermove", (t3) => {
            u2 && m2.call(this, t3);
          }), this.art.proxy(document, "pointerup", (t3) => {
            u2 && (u2 = false, m2.call(this, t3));
          }), { reset: h2 };
        }
        onFullscreen(t2) {
          let { $danmuku: e2, $controlsCenter: i2, $mount: a2 } = this.template;
          this.outside ? t2 ? this.append(i2, e2) : this.append(a2, e2) : this.append(i2, e2);
        }
        onMouseEnter({ $control: t2, $panel: e2 }) {
          let { $player: i2 } = this.art.template, a2 = t2.getBoundingClientRect(), n2 = e2.getBoundingClientRect(), o2 = i2.getBoundingClientRect(), s2 = n2.width / 2 - a2.width / 2, l2 = o2.left - (a2.left - s2), r2 = a2.right + s2 - o2.right;
          l2 > 0 ? e2.style.left = `${-s2 + l2}px` : r2 > 0 ? e2.style.left = `${-s2 - r2}px` : e2.style.left = `${-s2}px`;
        }
        async emit() {
          let { $input: t2 } = this.template, e2 = t2.value.trim();
          if (!e2.length || this.isLock || this.emitting) return;
          let i2 = { text: e2, mode: this.option.mode, color: this.option.color, time: this.art.currentTime };
          try {
            this.emitting = true;
            let e3 = await this.option.beforeEmit(i2);
            if (this.emitting = false, true !== e3) return;
            i2.border = true, delete i2.time, this.danmuku.emit(i2), t2.value = "", this.lock();
          } catch (t3) {
            this.emitting = false;
          }
        }
        lock() {
          let { addClass: t2 } = this.utils, { $send: e2 } = this.template;
          this.isLock = true;
          let i2 = this.option.lockTime;
          e2.innerText = i2, t2(e2, "apd-lock");
          let a2 = () => {
            this.timer = setTimeout(() => {
              0 === i2 ? this.unlock() : (i2 -= 1, e2.innerText = i2, a2());
            }, 1e3);
          };
          a2();
        }
        unlock() {
          let { removeClass: t2 } = this.utils, { $send: e2 } = this.template;
          clearTimeout(this.timer), this.isLock = false, e2.innerText = "发送", t2(e2, "apd-lock");
        }
        resize() {
          if (this.outside || this.art.fullscreen || this.art.fullscreenWeb) return;
          let { $player: t2, $controlsCenter: e2 } = this.art.template, { $danmuku: i2 } = this.template;
          this.art.width < this.option.width ? this.append(t2, i2) : this.append(e2, i2);
        }
        reset() {
          let { inverseClass: t2, tooltip: e2 } = this.utils, { $toggle: i2, $colors: a2 } = this.template;
          this.slider.opacity.reset(), this.slider.margin.reset(), this.slider.fontSize.reset(), this.slider.speed.reset(), this.setData("danmukuVisible", this.option.visible), this.setData("danmukuMode", this.option.mode), this.setData("danmukuColor", this.option.color), this.setData("danmukuMode0", this.option.modes.includes(0)), this.setData("danmukuMode1", this.option.modes.includes(1)), this.setData("danmukuMode2", this.option.modes.includes(2)), this.setData("danmukuAntiOverlap", this.option.antiOverlap), this.setData("danmukuSyncVideo", this.option.synchronousPlayback), this.setData("danmukuTheme", this.option.theme), this.setData("danmukuEmitter", this.option.emitter);
          let n2 = Array.from(a2.children).find((t3) => t3.dataset.color === this.option.color.toUpperCase());
          n2 && t2(n2, "apd-active"), e2(i2, this.option.visible ? "关闭弹幕" : "打开弹幕"), this.resize();
        }
        mount(t2) {
          let { errorHandle: e2 } = this.utils, i2 = "string" == typeof t2 ? document.querySelector(t2) : t2;
          e2(i2, `Can not find the mount point: ${t2}`), this.append(i2, this.template.$danmuku), this.template.$mount = i2, this.reset();
        }
      }, "undefined" != typeof document) {
        let t2 = "artplayer-plugin-danmuku", e2 = document.getElementById(t2);
        if (e2) e2.textContent = o.default;
        else {
          let e3 = document.createElement("style");
          e3.id = t2, e3.textContent = o.default, document.head.appendChild(e3);
        }
      }
    }, { "bundle-text:./style.less": "hViDo", "bundle-text:./img/on.svg": "9pjcf", "bundle-text:./img/off.svg": "b2dkP", "bundle-text:./img/config.svg": "l8tyy", "bundle-text:./img/style.svg": "5iZC3", "bundle-text:./img/mode_0_off.svg": "i0Vut", "bundle-text:./img/mode_0_on.svg": "hOSvZ", "bundle-text:./img/mode_1_off.svg": "bOXC3", "bundle-text:./img/mode_1_on.svg": "lKuh0", "bundle-text:./img/mode_2_off.svg": "eB8W6", "bundle-text:./img/mode_2_on.svg": "bpe2E", "bundle-text:./img/check_on.svg": "kL9zy", "bundle-text:./img/check_off.svg": "22xpM", "@parcel/transformer-js/src/esmodule-helpers.js": "9pCYc" }], hViDo: [function(t, e, i) {
      e.exports = '.artplayer-plugin-danmuku{z-index:99;color:#fff;flex-shrink:0;justify-content:center;align-items:center;gap:10px;width:100%;height:32px;font-size:12px;font-weight:300;display:flex;position:relative}.artplayer-plugin-danmuku .apd-icon{cursor:pointer;opacity:.75;fill:#fff;transition:all .2s}.artplayer-plugin-danmuku .apd-icon:hover{opacity:1}.artplayer-plugin-danmuku .apd-config{display:flex;position:relative}.artplayer-plugin-danmuku .apd-config .apd-config-panel{opacity:0;pointer-events:none;width:320px;padding:10px;position:absolute;bottom:24px;left:0}.artplayer-plugin-danmuku .apd-config .apd-config-panel .apd-config-panel-inner{background-color:#000000d9;border-radius:3px;width:100%;padding:10px}.artplayer-plugin-danmuku .apd-config:hover .apd-config-panel{opacity:100;pointer-events:all}.artplayer-plugin-danmuku .apd-config-mode,.artplayer-plugin-danmuku .apd-config-slider,.artplayer-plugin-danmuku .apd-config-other,.artplayer-plugin-danmuku .apd-style-mode{margin-bottom:15px}.artplayer-plugin-danmuku .apd-modes{align-items:center;gap:20px;margin-top:5px;display:flex}.artplayer-plugin-danmuku .apd-modes .apd-mode{cursor:pointer;text-align:center}.artplayer-plugin-danmuku .apd-modes .apd-mode:hover{color:#00a1d6}.artplayer-plugin-danmuku .apd-config-slider{align-items:center;gap:12px;display:flex}.artplayer-plugin-danmuku .apd-config-slider .apd-value{text-align:right;width:32px}.artplayer-plugin-danmuku .apd-slider{cursor:pointer;flex:1;justify-content:center;align-items:center;height:20px;display:flex;position:relative}.artplayer-plugin-danmuku .apd-slider .apd-slider-line{background-color:#ffffff40;border-radius:3px;width:100%;height:2px;position:relative;overflow:hidden}.artplayer-plugin-danmuku .apd-slider .apd-slider-points{justify-content:space-between;align-items:center;display:flex;position:absolute;inset:0}.artplayer-plugin-danmuku .apd-slider .apd-slider-points .apd-slider-point{background-color:#ffffff80;border-radius:50%;width:2px;height:2px}.artplayer-plugin-danmuku .apd-slider .apd-slider-progress{background-color:#00a1d6;width:0%;height:100%}.artplayer-plugin-danmuku .apd-slider .apd-slider-dot{background-color:#00a1d6;border-radius:50%;width:12px;height:12px;position:absolute;left:0%;transform:translate(-6px)}.artplayer-plugin-danmuku .apd-slider .apd-slider-steps{color:#777;justify-content:space-between;align-items:center;width:calc(100% + 32px);display:flex;position:absolute;bottom:-12px}.artplayer-plugin-danmuku .apd-slider .apd-slider-steps .apd-slider-step{text-align:center;flex-shrink:0;width:36px;scale:.95}.artplayer-plugin-danmuku .apd-config-other{align-items:center;gap:20px;display:flex}.artplayer-plugin-danmuku .apd-config-other .apd-check-off,.artplayer-plugin-danmuku .apd-config-other .apd-check-on{width:16px;height:16px}.artplayer-plugin-danmuku .apd-config-other .apd-other{cursor:pointer;align-items:center;gap:2px;display:flex}.artplayer-plugin-danmuku .apd-config-other .apd-other:hover{color:#00a1d6}.artplayer-plugin-danmuku .apd-emitter{background-color:#ffffff40;border-radius:5px;flex:1;align-items:center;height:100%;display:flex}.artplayer-plugin-danmuku .apd-style{justify-content:center;align-items:center;display:flex;position:relative}.artplayer-plugin-danmuku .apd-style .apd-style-panel{opacity:0;pointer-events:none;width:200px;padding:10px;position:absolute;bottom:24px;left:0}.artplayer-plugin-danmuku .apd-style .apd-style-panel .apd-style-panel-inner{background-color:#000000d9;border-radius:3px;width:100%;padding:10px}.artplayer-plugin-danmuku .apd-style:hover .apd-style-panel{opacity:100;pointer-events:all}.artplayer-plugin-danmuku .apd-colors{flex-wrap:wrap;gap:8px;margin-top:5px;display:flex}.artplayer-plugin-danmuku .apd-colors .apd-color{cursor:pointer;border-radius:2px;width:16px;height:16px}.artplayer-plugin-danmuku .apd-colors .apd-color.apd-active{border:1px solid #000;box-shadow:0 0 0 1px #fff}.artplayer-plugin-danmuku .apd-input{color:#fff;background-color:#0000;border:none;outline:none;flex:1;width:auto;min-width:0;height:100%;line-height:1}.artplayer-plugin-danmuku .apd-input::placeholder{color:#ffffff80}.artplayer-plugin-danmuku .apd-send{cursor:pointer;text-shadow:none;background-color:#00a1d6;border-top-right-radius:5px;border-bottom-right-radius:5px;flex-shrink:0;justify-content:center;align-items:center;width:60px;height:100%;display:flex}.artplayer-plugin-danmuku .apd-send.apd-lock{cursor:not-allowed;color:#666;background-color:#e7e7e7}.art-controls-center .apd-emitter{flex:none;width:260px}.art-fullscreen .artplayer-plugin-danmuku,.art-fullscreen-web .artplayer-plugin-danmuku{gap:16px;height:38px}.art-fullscreen .artplayer-plugin-danmuku .apd-config-icon,.art-fullscreen-web .artplayer-plugin-danmuku .apd-config-icon,.art-fullscreen .artplayer-plugin-danmuku .apd-toggle-off,.art-fullscreen-web .artplayer-plugin-danmuku .apd-toggle-off,.art-fullscreen .artplayer-plugin-danmuku .apd-toggle-on,.art-fullscreen-web .artplayer-plugin-danmuku .apd-toggle-on{width:28px;height:28px}.art-fullscreen .artplayer-plugin-danmuku .apd-emitter,.art-fullscreen-web .artplayer-plugin-danmuku .apd-emitter{flex:none;width:400px}.art-video-player>.artplayer-plugin-danmuku{padding:0 10px;position:absolute;bottom:-40px;left:0;right:0}.art-video-player:has(>.artplayer-plugin-danmuku){margin-bottom:40px}[data-danmuku-emitter=false] .apd-emitter{display:none!important}[data-danmuku-emitter=false] .art-controls-center .artplayer-plugin-danmuku{justify-content:flex-end;gap:18px}[data-danmuku-emitter=false].art-fullscreen .art-controls-center .artplayer-plugin-danmuku,[data-danmuku-emitter=false].art-fullscreen-web .art-controls-center .artplayer-plugin-danmuku{gap:24px}[data-danmuku-theme=light]>.artplayer-plugin-danmuku .apd-icon{fill:#333}[data-danmuku-theme=light]>.artplayer-plugin-danmuku .apd-emitter{background-color:#f1f2f3}[data-danmuku-theme=light]>.artplayer-plugin-danmuku .apd-input{color:#000}[data-danmuku-theme=light]>.artplayer-plugin-danmuku .apd-input::placeholder{color:#0000004d}[data-danmuku-visible=false] .apd-toggle-off{display:block}[data-danmuku-visible=false] .apd-toggle-on,[data-danmuku-visible=true] .apd-toggle-off{display:none}[data-danmuku-visible=true] .apd-toggle-on{display:block}[data-danmuku-anti-overlap=false] .apd-anti-overlap .apd-check-on{display:none}[data-danmuku-anti-overlap=false] .apd-anti-overlap .apd-check-off,[data-danmuku-anti-overlap=true] .apd-anti-overlap .apd-check-on{display:block}[data-danmuku-anti-overlap=true] .apd-anti-overlap .apd-check-off,[data-danmuku-sync-video=false] .apd-sync-video .apd-check-on{display:none}[data-danmuku-sync-video=false] .apd-sync-video .apd-check-off,[data-danmuku-sync-video=true] .apd-sync-video .apd-check-on{display:block}[data-danmuku-sync-video=true] .apd-sync-video .apd-check-off{display:none}[data-danmuku-mode0=false] .apd-config-mode .apd-mode-0-off{display:block}[data-danmuku-mode0=false] .apd-config-mode .apd-mode-0-on{display:none}[data-danmuku-mode0=false] .art-danmuku [data-mode="0"]{opacity:0!important}[data-danmuku-mode0=true] .apd-config-mode .apd-mode-0-off{display:none}[data-danmuku-mode0=true] .apd-config-mode .apd-mode-0-on{display:block}[data-danmuku-mode="0"] .apd-style-mode [data-mode="0"]{color:#00a1d6}[data-danmuku-mode="0"] .apd-style-mode [data-mode="0"] path{fill:#00a1d6}[data-danmuku-mode1=false] .apd-config-mode .apd-mode-1-off{display:block}[data-danmuku-mode1=false] .apd-config-mode .apd-mode-1-on{display:none}[data-danmuku-mode1=false] .art-danmuku [data-mode="1"]{opacity:0!important}[data-danmuku-mode1=true] .apd-config-mode .apd-mode-1-off{display:none}[data-danmuku-mode1=true] .apd-config-mode .apd-mode-1-on{display:block}[data-danmuku-mode="1"] .apd-style-mode [data-mode="1"]{color:#00a1d6}[data-danmuku-mode="1"] .apd-style-mode [data-mode="1"] path{fill:#00a1d6}[data-danmuku-mode2=false] .apd-config-mode .apd-mode-2-off{display:block}[data-danmuku-mode2=false] .apd-config-mode .apd-mode-2-on{display:none}[data-danmuku-mode2=false] .art-danmuku [data-mode="2"]{opacity:0!important}[data-danmuku-mode2=true] .apd-config-mode .apd-mode-2-off{display:none}[data-danmuku-mode2=true] .apd-config-mode .apd-mode-2-on{display:block}[data-danmuku-mode="2"] .apd-style-mode [data-mode="2"]{color:#00a1d6}[data-danmuku-mode="2"] .apd-style-mode [data-mode="2"] path{fill:#00a1d6}';
    }, {}], "9pjcf": [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-toggle-on" xmlns="http://www.w3.org/2000/svg" data-pointer="none" viewBox="0 0 24 24" width="24" height="24"><path fill-rule="evenodd" d="M11.989 4.828c-.47 0-.975.004-1.515.012l-1.71-2.566a1.008 1.008 0 0 0-1.678 1.118l.999 1.5c-.681.018-1.403.04-2.164.068a4.013 4.013 0 0 0-3.83 3.44c-.165 1.15-.245 2.545-.245 4.185 0 1.965.115 3.67.35 5.116a4.012 4.012 0 0 0 3.763 3.363l.906.046c1.205.063 1.808.095 3.607.095a.988.988 0 0 0 0-1.975c-1.758 0-2.339-.03-3.501-.092l-.915-.047a2.037 2.037 0 0 1-1.91-1.708c-.216-1.324-.325-2.924-.325-4.798 0-1.563.076-2.864.225-3.904.14-.977.96-1.713 1.945-1.747 2.444-.087 4.465-.13 6.063-.131 1.598 0 3.62.044 6.064.13.96.034 1.71.81 1.855 1.814.075.524.113 1.962.141 3.065v.002c.01.342.017.65.025.88a.987.987 0 1 0 1.974-.068c-.008-.226-.016-.523-.025-.856v-.027c-.03-1.118-.073-2.663-.16-3.276-.273-1.906-1.783-3.438-3.74-3.507-.9-.032-1.743-.058-2.531-.078l1.05-1.46a1.008 1.008 0 0 0-1.638-1.177l-1.862 2.59c-.38-.004-.744-.007-1.088-.007h-.13Zm.521 4.775h-1.32v4.631h2.222v.847h-2.618v1.078h2.618l.003.678c.36.026.714.163 1.01.407h.11v-1.085h2.694v-1.078h-2.695v-.847H16.8v-4.63h-1.276a8.59 8.59 0 0 0 .748-1.42L15.183 7.8a14.232 14.232 0 0 1-.814 1.804h-1.518l.693-.308a8.862 8.862 0 0 0-.814-1.408l-1.045.352c.297.396.572.847.825 1.364Zm-4.18 3.564.154-1.485h1.98V8.294h-3.2v.98H9.33v1.43H7.472l-.308 3.453h2.277c0 1.166-.044 1.925-.12 2.277-.078.352-.386.528-.936.528-.308 0-.616-.022-.902-.055l.297 1.067.062.005c.285.02.551.04.818.04 1.001-.067 1.562-.419 1.694-1.057.11-.638.176-1.903.176-3.795h-2.2Zm7.458.11v-.858h-1.254v.858h1.254Zm-2.376-.858v.858h-1.199v-.858h1.2Zm-1.199-.946h1.2v-.902h-1.2v.902Zm2.321 0v-.902h1.254v.902h-1.254Z" clip-rule="evenodd"/><path fill="#00AEEC" fill-rule="evenodd" d="M22.846 14.627a1 1 0 0 0-1.412.075l-5.091 5.703-2.216-2.275-.097-.086-.008-.005a1 1 0 0 0-1.322 1.493l2.963 3.041.093.083.007.005a1 1 0 0 0 1.354-.124l5.81-6.505.08-.102.005-.008a1 1 0 0 0-.166-1.295Z" clip-rule="evenodd"/></svg>';
    }, {}], b2dkP: [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-toggle-off" xmlns="http://www.w3.org/2000/svg" data-pointer="none" viewBox="0 0 24 24" width="24" height="24"><path fill-rule="evenodd" d="m8.085 4.891-.999-1.499a1.008 1.008 0 0 1 1.679-1.118l1.709 2.566c.54-.008 1.045-.012 1.515-.012h.13c.345 0 .707.003 1.088.007l1.862-2.59a1.008 1.008 0 0 1 1.637 1.177l-1.049 1.46c.788.02 1.631.046 2.53.078 1.958.069 3.468 1.6 3.74 3.507.088.613.13 2.158.16 3.276l.001.027c.01.333.017.63.025.856a.987.987 0 0 1-1.974.069c-.008-.23-.016-.539-.025-.881v-.002c-.028-1.103-.066-2.541-.142-3.065-.143-1.004-.895-1.78-1.854-1.813a179.14 179.14 0 0 0-6.064-.131c-1.598 0-3.619.044-6.063.13a2.037 2.037 0 0 0-1.945 1.748c-.15 1.04-.225 2.341-.225 3.904 0 1.874.11 3.474.325 4.798.154.949.95 1.66 1.91 1.708a97.58 97.58 0 0 0 5.416.139.988.988 0 0 1 0 1.975 99.78 99.78 0 0 1-5.513-.141A4.012 4.012 0 0 1 2.197 17.7c-.236-1.446-.351-3.151-.351-5.116 0-1.64.08-3.035.245-4.184A4.013 4.013 0 0 1 5.92 4.96c.761-.027 1.483-.05 2.164-.069Zm4.436 4.707h-1.32v4.63h2.222v.848h-2.618v1.078h2.431a5.01 5.01 0 0 1 3.575-3.115V9.598h-1.276a8.59 8.59 0 0 0 .748-1.42l-1.089-.384a14.232 14.232 0 0 1-.814 1.804h-1.518l.693-.308a8.862 8.862 0 0 0-.814-1.408l-1.045.352c.297.396.572.847.825 1.364Zm-4.18 3.564.154-1.485h1.98V8.289h-3.2v.979h2.067v1.43H7.483l-.308 3.454h2.277c0 1.166-.044 1.925-.12 2.277-.078.352-.386.528-.936.528-.308 0-.616-.022-.902-.055l.297 1.067.062.004c.285.02.551.04.818.04 1.001-.066 1.562-.418 1.694-1.056.11-.638.176-1.903.176-3.795h-2.2Zm7.458.11v-.858h-1.254v.858H15.8Zm-2.376-.858v.858h-1.199v-.858h1.2Zm-1.199-.946h1.2v-.902h-1.2v.902Zm2.321 0v-.902H15.8v.902h-1.254Zm3.517 10.594a4 4 0 1 0 0-8 4 4 0 0 0 0 8Zm-.002-1.502a2.5 2.5 0 0 1-2.217-3.657l3.326 3.398a2.49 2.49 0 0 1-1.109.259Zm2.5-2.5c0 .42-.103.815-.286 1.162l-3.328-3.401a2.5 2.5 0 0 1 3.614 2.239Z" clip-rule="evenodd"/></svg>';
    }, {}], l8tyy: [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-config-icon" xmlns="http://www.w3.org/2000/svg" data-pointer="none" viewBox="0 0 24 24" width="24" height="24"><path fill-rule="evenodd" d="m15.645 4.881 1.06-1.473a.998.998 0 1 0-1.622-1.166L13.22 4.835a110.67 110.67 0 0 0-1.1-.007h-.131c-.47 0-.975.004-1.515.012L8.783 2.3A.998.998 0 0 0 7.12 3.408l.988 1.484c-.688.019-1.418.042-2.188.069a4.013 4.013 0 0 0-3.83 3.44c-.165 1.15-.245 2.545-.245 4.185 0 1.965.115 3.67.35 5.116a4.012 4.012 0 0 0 3.763 3.363 99.78 99.78 0 0 0 5.513.141.988.988 0 0 0 0-1.975 97.58 97.58 0 0 1-5.416-.139 2.037 2.037 0 0 1-1.91-1.708c-.216-1.324-.325-2.924-.325-4.798 0-1.563.076-2.864.225-3.904.14-.977.96-1.713 1.945-1.747 2.444-.087 4.465-.13 6.063-.131 1.598 0 3.62.044 6.064.13.96.034 1.71.81 1.855 1.814.075.524.113 1.962.141 3.065v.002c.005.183.01.07.014-.038.004-.096.008-.189.011-.081a.987.987 0 1 0 1.974-.069c-.004-.105-.007-.009-.011.09a2.175 2.175 0 0 1-.007.135l-.002.01a.574.574 0 0 1-.005-.091v-.027c-.03-1.118-.073-2.663-.16-3.276-.273-1.906-1.783-3.438-3.74-3.507-.905-.032-1.752-.058-2.543-.079Zm-3.113 4.703h-1.307v4.643h2.2v.04l.651-1.234c.113-.215.281-.389.482-.509v-.11h.235c.137-.049.283-.074.433-.074h1.553V9.584h-1.264a8.5 8.5 0 0 0 .741-1.405l-1.078-.381c-.24.631-.501 1.23-.806 1.786h-1.503l.686-.305a8.613 8.613 0 0 0-.806-1.394l-1.034.348c.294.392.566.839.817 1.35Zm-1.7 5.502h2.16l-.564 1.068h-1.595v-1.068Zm-2.498-1.863.152-1.561h1.96V8.289H7.277v.969h2.048v1.435h-1.84l-.306 3.51h2.254c0 1.155-.043 1.906-.12 2.255-.076.348-.38.523-.925.523-.305 0-.61-.022-.893-.055l.294 1.056.061.005c.282.02.546.039.81.039.991-.065 1.547-.414 1.677-1.046.11-.631.175-1.883.175-3.757H8.334Zm5.09-.8v.85h-1.188v-.85h1.187Zm-1.188-.955h1.187v-.893h-1.187v.893Zm2.322.007v-.893h1.241v.893h-1.241Zm.528 2.757a1.26 1.26 0 0 1 1.087-.627l4.003-.009a1.26 1.26 0 0 1 1.094.63l1.721 2.982c.226.39.225.872-.001 1.263l-1.743 3a1.26 1.26 0 0 1-1.086.628l-4.003.009a1.26 1.26 0 0 1-1.094-.63l-1.722-2.982a1.26 1.26 0 0 1 .002-1.263l1.742-3Zm1.967.858a1.26 1.26 0 0 0-1.08.614l-.903 1.513a1.26 1.26 0 0 0-.002 1.289l.885 1.492c.227.384.64.62 1.086.618l2.192-.005a1.26 1.26 0 0 0 1.08-.615l.904-1.518a1.26 1.26 0 0 0 .001-1.288l-.884-1.489a1.26 1.26 0 0 0-1.086-.616l-2.193.005Zm2.517 2.76a1.4 1.4 0 1 1-2.8 0 1.4 1.4 0 0 1 2.8 0Z" clip-rule="evenodd"/></svg>';
    }, {}], "5iZC3": [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-style-icon" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" data-pointer="none" style="enable-background:new 0 0 22 22" viewBox="0 0 22 22" width="36" height="24"><path d="M17 16H5c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM6.96 15c.39 0 .74-.24.89-.6l.65-1.6h5l.66 1.6c.15.36.5.6.89.6.69 0 1.15-.71.88-1.34l-3.88-8.97C11.87 4.27 11.46 4 11 4s-.87.27-1.05.69l-3.88 8.97c-.27.63.2 1.34.89 1.34zM11 5.98 12.87 11H9.13L11 5.98z"/></svg>';
    }, {}], i0Vut: [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-mode-0-off" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" data-pointer="none" style="enable-background:new 0 0 28 28" viewBox="0 0 28 28" width="28" height="28"><path d="M23 15c1.487 0 2.866.464 4 1.255V7a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v14a4 4 0 0 0 4 4h11.674A7 7 0 0 1 23 15zM11 9h6a1 1 0 0 1 0 2h-6a1 1 0 0 1 0-2zm-3 2H6V9h2v2zm4 4h-2v-2h2v2zm2-1a1 1 0 0 1 1-1h1a1 1 0 0 1 0 2h-1a1 1 0 0 1-1-1z" fill="#00AEEC"/><path d="M26.536 18.464a5 5 0 0 0-7.071 0 5 5 0 0 0 0 7.071 5 5 0 1 0 7.071-7.071zm-5.657 5.657a3 3 0 0 1-.586-3.415l4.001 4.001a3 3 0 0 1-3.415-.586zm4.829-.827-4.001-4.001a3.002 3.002 0 0 1 4.001 4.001z" fill="#00AEEC"/></svg>';
    }, {}], hOSvZ: [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-mode-0-on" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" data-pointer="none" style="enable-background:new 0 0 28 28" viewBox="0 0 28 28" width="28" height="28"><path d="M23 3H5a4 4 0 0 0-4 4v14a4 4 0 0 0 4 4h18a4 4 0 0 0 4-4V7a4 4 0 0 0-4-4zM11 9h6a1 1 0 0 1 0 2h-6a1 1 0 0 1 0-2zm-3 2H6V9h2v2zm4 4h-2v-2h2v2zm9 0h-6a1 1 0 0 1 0-2h6a1 1 0 0 1 0 2z" fill="#FFF"/></svg>';
    }, {}], bOXC3: [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-mode-1-off" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" data-pointer="none" style="enable-background:new 0 0 28 28" viewBox="0 0 28 28" width="28" height="28"><path d="M23 15c1.487 0 2.866.464 4 1.255V7a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v14a4 4 0 0 0 4 4h11.674A7 7 0 0 1 23 15zm-4-8h2v2h-2V7zM9 9H7V7h2v2zm4 0h-2V7h2v2zm2-2h2v2h-2V7z" fill="#00AEEC"/><path d="M26.536 18.464a5 5 0 0 0-7.071 0 5 5 0 0 0 0 7.071 5 5 0 1 0 7.071-7.071zm-5.657 5.657a3 3 0 0 1-.586-3.415l4.001 4.001a3 3 0 0 1-3.415-.586zm4.829-.827-4.001-4.001a3.002 3.002 0 0 1 4.001 4.001z" fill="#00AEEC"/></svg>';
    }, {}], lKuh0: [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-mode-1-on" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" data-pointer="none" style="enable-background:new 0 0 28 28" viewBox="0 0 28 28" width="28" height="28"><path d="M23 3H5a4 4 0 0 0-4 4v14a4 4 0 0 0 4 4h18a4 4 0 0 0 4-4V7a4 4 0 0 0-4-4zM9 9H7V7h2v2zm4 0h-2V7h2v2zm4 0h-2V7h2v2zm4 0h-2V7h2v2z" fill="#FFF"/></svg>';
    }, {}], eB8W6: [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-mode-2-off" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" data-pointer="none" style="enable-background:new 0 0 28 28" viewBox="0 0 28 28" width="28" height="28"><path d="M23 15c1.487 0 2.866.464 4 1.255V7a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v14a4 4 0 0 0 4 4h11.674A7 7 0 0 1 23 15zM9 21H7v-2h2v2zm4 0h-2v-2h2v2z" fill="#00AEEC"/><path d="M26.536 18.464a5 5 0 0 0-7.071 0 5 5 0 0 0 0 7.071 5 5 0 1 0 7.071-7.071zm-5.657 5.657a3 3 0 0 1-.586-3.415l4.001 4.001a3 3 0 0 1-3.415-.586zm4.829-.827-4.001-4.001a3.002 3.002 0 0 1 4.001 4.001z" fill="#00AEEC"/></svg>';
    }, {}], bpe2E: [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-mode-2-on" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" data-pointer="none" style="enable-background:new 0 0 28 28" viewBox="0 0 28 28" width="28" height="28"><path d="M23 3H5a4 4 0 0 0-4 4v14a4 4 0 0 0 4 4h18a4 4 0 0 0 4-4V7a4 4 0 0 0-4-4zM9 21H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2z" fill="#FFF"/></svg>';
    }, {}], kL9zy: [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-check-on" xmlns="http://www.w3.org/2000/svg" data-pointer="none" viewBox="0 0 32 32" width="32" height="32"><path d="m13 18.25-1.8-1.8c-.6-.6-1.65-.6-2.25 0s-.6 1.5 0 2.25l2.85 2.85c.318.318.762.468 1.2.448.438.02.882-.13 1.2-.448l8.85-8.85c.6-.6.6-1.65 0-2.25s-1.65-.6-2.25 0l-7.8 7.8zM8 4h16c2.21 0 4 1.79 4 4v16c0 2.21-1.79 4-4 4H8c-2.21 0-4-1.79-4-4V8c0-2.21 1.79-4 4-4z" fill="#00AEEC"/></svg>';
    }, {}], "22xpM": [function(t, e, i) {
      e.exports = '<svg class="apd-icon apd-check-off" xmlns="http://www.w3.org/2000/svg" data-pointer="none" viewBox="0 0 32 32" width="32" height="32"><path d="M8 6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H8zm0-2h16c2.21 0 4 1.79 4 4v16c0 2.21-1.79 4-4 4H8c-2.21 0-4-1.79-4-4V8c0-2.21 1.79-4 4-4z" fill="#FFF"/></svg>';
    }, {}], "8AxLD": [function(t, e, i) {
      var a = t("@parcel/transformer-js/src/esmodule-helpers.js");
      a.defineInteropFlag(i), a.export(i, "default", () => s);
      let n = { map: (t2, e2, i2, a2, n2) => (t2 - e2) * (n2 - a2) / (i2 - e2) + a2, range(t2, e2, i2) {
        let a2 = Math.round(t2 / i2) * i2;
        return Array.from({ length: Math.floor((e2 - t2) / i2) }, (t3, e3) => e3 * i2 + a2);
      } }, o = (t2, e2) => {
        let i2 = e2[0] - t2[0], a2 = e2[1] - t2[1];
        return { length: Math.sqrt(Math.pow(i2, 2) + Math.pow(a2, 2)), angle: Math.atan2(a2, i2) };
      };
      function s(t2, e2, i2) {
        let { query: a2 } = t2.constructor.utils;
        t2.controls.add({ name: "heatmap", position: "top", html: "", style: { position: "absolute", top: "-100px", left: "0px", right: "0px", height: "100px", width: "100%", pointerEvents: "none" }, mounted(s2) {
          let l = null, r = null;
          function d(p = []) {
            if (l = null, r = null, s2.innerHTML = "", !t2.duration || t2.option.isLive) return;
            let u = { w: s2.offsetWidth, h: s2.offsetHeight }, h = { xMin: 0, xMax: u.w, yMin: 0, yMax: 128, scale: 0.25, opacity: 0.2, minHeight: Math.floor(0.05 * u.h), sampling: Math.floor(u.w / 100), smoothing: 0.2, flattening: 0.2 };
            "object" == typeof i2 && Object.assign(h, i2);
            let m = [];
            if (Array.isArray(p) && p.length) m = [...p];
            else {
              let i3 = t2.duration / u.w;
              for (let t3 = 0; t3 <= u.w; t3 += h.sampling) {
                let a3 = e2.queue.filter(({ time: e3 }) => e3 > t3 * i3 && e3 <= (t3 + h.sampling) * i3).length;
                m.push([t3, a3]);
              }
            }
            if (0 === m.length) return;
            let c = m[m.length - 1], f = c[0], g = c[1];
            f !== u.w && m.push([u.w, g]);
            let y = m.map((t3) => t3[1]), v = (Math.min(...y) + Math.max(...y)) / 2;
            for (let t3 = 0; t3 < m.length; t3++) {
              let e3 = m[t3], i3 = e3[1];
              e3[1] = i3 * (i3 > v ? 1 + h.scale : 1 - h.scale) + h.minHeight;
            }
            let x = (t3, e3, i3, a3) => {
              let s3 = o(e3 || t3, i3 || t3), l2 = n.map(Math.cos(s3.angle) * h.flattening, 0, 1, 1, 0), r2 = s3.angle * l2 + (a3 ? Math.PI : 0), d2 = s3.length * h.smoothing;
              return [t3[0] + Math.cos(r2) * d2, t3[1] + Math.sin(r2) * d2];
            }, k = (t3, e3, i3) => {
              let a3 = x(i3[e3 - 1], i3[e3 - 2], t3), n2 = x(t3, i3[e3 - 1], i3[e3 + 1], true), o2 = e3 === i3.length - 1 ? " z" : "";
              return `C ${a3[0]},${a3[1]} ${n2[0]},${n2[1]} ${t3[0]},${t3[1]}${o2}`;
            }, b = m.map((t3) => [n.map(t3[0], h.xMin, h.xMax, 0, u.w), n.map(t3[1], h.yMin, h.yMax, u.h, 0)]).reduce((t3, e3, i3, a3) => 0 === i3 ? `M ${a3[a3.length - 1][0]},${u.h} L ${e3[0]},${u.h} L ${e3[0]},${e3[1]}` : `${t3} ${k(e3, i3, a3)}`, "");
            s2.innerHTML = `<svg viewBox="0 0 ${u.w} ${u.h}"><defs><linearGradient id="heatmap-solids" x1="0%" y1="0%" x2="100%" y2="0%"><stop offset="0%" style="stop-color:var(--art-theme);stop-opacity:${h.opacity}" /><stop offset="0%" style="stop-color:var(--art-theme);stop-opacity:${h.opacity}" id="heatmap-start" /><stop offset="0%" style="stop-color:var(--art-progress-color);stop-opacity:1" id="heatmap-stop" /><stop offset="100%" style="stop-color:var(--art-progress-color);stop-opacity:1" /></linearGradient></defs><path fill="url(#heatmap-solids)" d="${b}"></path></svg>`, l = a2("#heatmap-start", s2), r = a2("#heatmap-stop", s2), l.setAttribute("offset", `${100 * t2.played}%`), r.setAttribute("offset", `${100 * t2.played}%`);
          }
          t2.on("video:timeupdate", () => {
            l && r && (l.setAttribute("offset", `${100 * t2.played}%`), r.setAttribute("offset", `${100 * t2.played}%`));
          }), t2.on("setBar", (t3, e3) => {
            l && r && "played" === t3 && (l.setAttribute("offset", `${100 * e3}%`), r.setAttribute("offset", `${100 * e3}%`));
          }), t2.on("ready", () => d()), t2.on("resize", () => d()), t2.on("artplayerPluginDanmuku:loaded", () => d()), t2.on("artplayerPluginDanmuku:points", (t3) => d(t3));
        } });
      }
    }, { "@parcel/transformer-js/src/esmodule-helpers.js": "9pCYc" }] }, ["bgm6t"], "bgm6t", "parcelRequire4dc0");
  }
});
export default require_artplayer_plugin_danmuku();
/*! Bundled license information:

artplayer-plugin-danmuku/dist/artplayer-plugin-danmuku.js:
  (*!
   * artplayer-plugin-danmuku.js v5.1.5
   * Github: https://github.com/zhw2590582/ArtPlayer
   * (c) 2017-2025 Harvey Zack
   * Released under the MIT License.
   *)
*/
//# sourceMappingURL=artplayer-plugin-danmuku.js.map
