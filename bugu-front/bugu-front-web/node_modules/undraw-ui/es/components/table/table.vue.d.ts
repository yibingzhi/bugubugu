import { FormItemRule } from 'element-plus';
import { Arrayable } from 'element-plus/es/utils/typescript';
interface ComponentApi {
    name: 'el-input' | 'el-select' | 'el-date' | 'el-tag' | 'u-search2' | string;
    options?: any[] | {
        label: string;
        value: string;
    }[];
    disabled?: boolean;
    placeholder?: string;
    [key: string]: any;
}
export interface TableItemApi {
    label?: string;
    prop?: string;
    value?: any;
    width?: number;
    minWidth?: number;
    headerAlign?: 'left' | 'center' | 'right';
    align?: 'left' | 'center' | 'right';
    fixed?: 'left' | 'right' | false;
    type?: 'basic' | 'index' | 'selection' | 'img' | 'row-add' | 'custom' | 'operation' | 'component';
    editor?: boolean;
    overflow?: boolean;
    required?: boolean;
    rule?: Arrayable<FormItemRule>;
    sort?: 'asc' | 'desc' | null;
    component?: ComponentApi;
}
export interface TableApi {
    key?: string;
    type?: 'page' | 'list';
    columns: TableItemApi[];
    sort?: 'custom';
    data: {}[];
    total?: number;
    size?: number;
    single?: boolean;
    number?: string;
    minWidth?: number;
    refresh?: (done: () => void, current: number, size: number, sort?: any) => void;
    rowForm?: any;
}
export interface Props {
    table: TableApi;
    maxHeight?: number | string;
}
declare function clear(): void;
declare function validate(callback: (vaild: boolean, fields: any) => void): void;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_TypePropsToRuntimeProps<Props>, {
    reload: {
        (...args: any): Promise<unknown>;
        cancel(): void;
    };
    validate: typeof validate;
    clear: typeof clear;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    onSelection: (val: any) => void;
    inputBlur: (val: any) => void;
    sortChange: (val: any) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_TypePropsToRuntimeProps<Props>>> & {
    onOnSelection?: ((val: any) => any) | undefined;
    onInputBlur?: ((val: any) => any) | undefined;
    onSortChange?: ((val: any) => any) | undefined;
}, {}, {}>, Partial<Record<`table-${string}`, (_: any) => any>> & {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
