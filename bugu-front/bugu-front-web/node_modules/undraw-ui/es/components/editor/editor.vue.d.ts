import { MentionApi } from './mention.vue';
interface Props {
    placeholder?: string;
    modelValue: string;
    minHeight?: number;
    mention?: MentionApi;
    imgList?: string[];
}
declare function focus(): void;
declare function clear(): void;
/**
 * 光标处追加内容
 * @param val 内容
 * @param func Range处理事务
 */
declare function addText(val: string): void;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    minHeight: number;
}>, {
    addText: typeof addText;
    clear: typeof clear;
    focus: typeof focus;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (val: string) => void;
    input: (event: Event) => void;
    focus: (event: Event) => void;
    blur: (event: Event) => void;
    submit: () => void;
    "mention-search": (val: string) => void;
    paste: (event: Event, file: File) => void;
    "change-img-list": (val: any[]) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    minHeight: number;
}>>> & {
    onPaste?: ((event: Event, file: File) => any) | undefined;
    onFocus?: ((event: Event) => any) | undefined;
    onBlur?: ((event: Event) => any) | undefined;
    onInput?: ((event: Event) => any) | undefined;
    onSubmit?: (() => any) | undefined;
    "onUpdate:modelValue"?: ((val: string) => any) | undefined;
    "onMention-search"?: ((val: string) => any) | undefined;
    "onChange-img-list"?: ((val: any[]) => any) | undefined;
}, {
    minHeight: number;
}, {}>, {
    footer?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
