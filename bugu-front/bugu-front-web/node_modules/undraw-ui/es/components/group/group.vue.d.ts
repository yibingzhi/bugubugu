import { FormApi } from 'undraw-ui';
interface Props {
    form: FormApi;
}
declare function validate(callback: (vaild: boolean, fields: any) => void): void;
declare function resetFields(): void;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_TypePropsToRuntimeProps<Props>, {
    validate: typeof validate;
    resetFields: typeof resetFields;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_TypePropsToRuntimeProps<Props>>>, {}, {}>, Partial<Record<`form-${string}`, (_: {
    item: import("undraw-ui").FormItemApi;
    data: any;
}) => any>> & Partial<Record<`form-${string}`, (_: {
    item: import("undraw-ui").FormItemApi;
    data: any;
}) => any>> & Partial<Record<`form-${string}`, (_: {
    item: import("undraw-ui").FormItemApi;
    data: any;
}) => any>>>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
