import search2Vue from './search2.vue';
export type * from './search2.vue';
export type Search2Instance = InstanceType<typeof search2Vue>;
export declare const USearch2: import("vue").DefineComponent<{
    placeholder: {
        type: import("vue").PropType<string>;
        default: string;
    };
    modelValue: {
        type: import("vue").PropType<string>;
        required: true;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (val: string) => void;
    remoteSearch: (val: string, done: (arg: any) => void) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    placeholder: {
        type: import("vue").PropType<string>;
        default: string;
    };
    modelValue: {
        type: import("vue").PropType<string>;
        required: true;
    };
}>> & {
    "onUpdate:modelValue"?: ((val: string) => any) | undefined;
    onRemoteSearch?: ((val: string, done: (arg: any) => void) => any) | undefined;
}, {
    placeholder: string;
}, {}>;
export default USearch2;
