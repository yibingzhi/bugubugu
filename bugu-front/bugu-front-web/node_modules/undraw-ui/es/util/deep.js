import { a, c as l } from "./isEmpty.js";
import { c as h } from "./clone-deep.js";
import "vue";
import "undraw-ui";
import "./clean-html.js";
/*! UndrawUi v1.2.6 */
function D(r, t = { parentId: "parentId", children: "children" }) {
  let o = a(t.parentId, "parentId"), d = a(t.children, "children");
  r = h(r);
  const c = [], p = {};
  return r.forEach((n) => p[n.id] = n), r.forEach((n) => {
    const i = p[n[o]];
    i ? (i[d] || (i[d] = [])).push(n) : c.push(n);
  }), c;
}
function E(r = [], t = { parentId: "parentId", children: "children" }) {
  let o = a(t.parentId, "parentId"), d = a(t.children, "children");
  const c = [], p = (n, i) => {
    n.forEach((e) => {
      e.id || (e.id = i++), e[o] = i, c.push(e), e[d] && l(e[d]) && p(e[d], e.id);
    });
  };
  return p(r || [], null), c;
}
const y = (r, t = 1 / 0) => r.flat(t);
export {
  D as d,
  y as f,
  E as r
};
