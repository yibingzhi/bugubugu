import { isObject as o } from "undraw-ui";
/*! UndrawUi v1.2.6 */
const u = (e) => e == null ? "" : String(e);
function f(e) {
  let n = ["png", "jpg", "jpeg", "gif", "webp", "svg"], t = e.lastIndexOf("."), i = e.substring(t + 1);
  return n.indexOf(i.toLowerCase()) != -1;
}
function m(e) {
  return window.URL ? window.URL.createObjectURL(e) : window.webkitURL ? window.webkitURL.createObjectURL(e) : "";
}
const d = (e, n, t) => {
  let i = e[n];
  return e.splice(n, 1), e.splice(t, 0, i), e;
}, a = (e, n, t) => {
  let i = null;
  for (let r = 0; r < e.length; r++)
    if (e[r][n] == t) {
      i = r;
      break;
    }
  i != null && e.splice(i, 1);
};
function w(e, n) {
  return Array.from({ length: n - e + 1 }, (t, i) => e + i);
}
const p = (e) => isNaN(e) || e == null ? e : e + "px";
function c(e, n) {
  for (const t in n)
    n.hasOwnProperty(t) && (e.hasOwnProperty(t) ? o(n[t]) && o(e[t]) && c(e[t], n[t]) : e[t] = n[t]), n.hasOwnProperty(t) && !e.hasOwnProperty(t) && (console.log(t), e[t] = n[t]);
}
const O = {
  beforeMount(e, n) {
    function t(i) {
      let r = document.querySelectorAll(n.arg);
      if (!e.contains(i.target)) {
        if (r) {
          for (const s of Array.from(r))
            if (s.contains(i.target))
              return;
        }
        n.value(i);
      }
    }
    document.addEventListener("click", t), e._clickOutside = t;
  },
  unmounted(e) {
    document.removeEventListener("click", e._clickOutside), delete e._clickOutside;
  }
};
export {
  d as a,
  w as b,
  m as c,
  f as i,
  c as m,
  a as r,
  u as s,
  p as t,
  O as v
};
