var f = Object.defineProperty;
var h = (r, t, e) => t in r ? f(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e;
var o = (r, t, e) => (h(r, typeof t != "symbol" ? t + "" : t, e), e);
/*! UndrawUi v1.2.6 */
class g {
  constructor(...t) {
    o(this, "value", /* @__PURE__ */ new Date());
    this.value = a(new Date(...t));
  }
  add(t, e) {
    let n = new Date(this.value);
    const s = {
      ms: 1,
      second: 1e3,
      minute: 1e3 * 60,
      hour: 1e3 * 60 * 60,
      day: 1e3 * 60 * 60 * 24,
      week: 1e3 * 60 * 60 * 24 * 7
    };
    return e === "year" ? n.setFullYear(n.getFullYear() + t) : e === "month" ? n.setMonth(n.getMonth() + t) : n = new Date(n - 0 + s[e] * t), a(n);
  }
  /**
   * 
   * @param {String} v y-m-d h:i:s 
   * @returns 
   */
  format(t) {
    return a(this.value, t);
  }
  toString() {
    return `${this.value}`;
  }
}
function w(r) {
  if (r == null)
    return "";
  let t = /* @__PURE__ */ new Date(), e = new Date(r);
  if (/^[0-9]\d*$/.test(r) && (e = new Date(parseInt(r))), t.getTime() < e.getTime() || t.getFullYear() != e.getFullYear())
    return a(e, "y-m-d h:i");
  if (t.getMonth() != e.getMonth())
    return a(e, "m-d h:i");
  if (t.getDate() != e.getDate()) {
    let u = e.getDate() - t.getDate();
    return u == -1 ? a(e, "昨天 h:i") : u == -2 ? a(e, "前天 h:i") : a(e, "m-d h:i");
  }
  let n = t.getTime() - e.getTime();
  if (t.getHours() != e.getHours() || n > 30 * 60 * 1e3)
    return a(e, "h:i");
  let s = e.getMinutes() - t.getMinutes();
  return s == 0 ? "刚刚" : (s = Math.abs(s), `${s}分钟前`);
}
function a(r, t) {
  if (arguments.length === 0)
    return null;
  let e = new Date(r);
  const n = t || "y-m-d h:i:s";
  typeof r == "string" && /^[0-9]+$/.test(r) && (r = parseInt(r));
  const s = {
    y: e.getFullYear(),
    m: e.getMonth() + 1,
    d: e.getDate(),
    h: e.getHours(),
    i: e.getMinutes(),
    s: e.getSeconds(),
    a: e.getDay()
  };
  return n.replace(/([ymdhisa])+/g, (m, i) => {
    const l = s[i];
    return i === "a" ? ["日", "一", "二", "三", "四", "五", "六"][l] : l.toString().padStart(2, "0");
  });
}
const c = () => {
  let t = (/* @__PURE__ */ new Date()).getHours(), e = "晚上好!";
  return t >= 0 && t < 6 ? e = "凌晨好!" : t < 9 ? e = "早上好!" : t < 12 ? e = "上午好!" : t < 14 ? e = "中午好!" : t < 17 ? e = "下午好!" : t < 19 && (e = "傍晚好!"), e;
};
function d(r) {
  var t = r ? new Date(r) : /* @__PURE__ */ new Date(), e = t.getFullYear(), n = t.getMonth();
  return new g(e, n, 1);
}
function M(r) {
  var t = r ? new Date(r) : /* @__PURE__ */ new Date(), e = t.getFullYear(), n = t.getMonth();
  return new g(e, n + 1, 0);
}
export {
  g as T,
  M as a,
  a as f,
  d as g,
  w as h,
  c as t
};
